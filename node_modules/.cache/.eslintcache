[{"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Sign\\Sign.jsx":"1","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\BlogDetails\\BlogDetails.jsx":"2","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\index.js":"3","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\App.js":"4","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\store.js":"5","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\FavSlice.js":"6","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\productApi.js":"7","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\SignApi.js":"8","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Global Section\\Notifiction.jsx":"9","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\CartSlice.js":"10","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\Home.jsx":"11","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\About.jsx":"12","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Contact\\Contact.jsx":"13","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Header\\CoponCode.jsx":"14","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop Details\\Shopdetails.jsx":"15","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Header\\Header.jsx":"16","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Cart\\Cart.jsx":"17","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Footer\\Footer.jsx":"18","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Fav\\Fav.jsx":"19","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Blog\\Blog.jsx":"20","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop\\Shop.jsx":"21","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Checkout\\Check.jsx":"22","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Blog\\BlogsSection;.jsx":"23","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\section2.jsx":"24","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\ExternalMethods\\ScrollToTop.jsx":"25","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\CategorySection.jsx":"26","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\bannerSection.jsx":"27","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Section5.jsx":"28","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\AllProductsSection.jsx":"29","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\section1.jsx":"30","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Productsection.jsx":"31","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\SwiperSection.jsx":"32","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\Section2.jsx":"33","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\Section1.jsx":"34","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\section4.jsx":"35","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\brands.jsx":"36","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Footer\\Subscribe.jsx":"37","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Checkout\\confirm.jsx":"38","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\ExternalMethods\\matchDownMd.jsx":"39","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Shape.jsx":"40","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\Hooks\\useCountDown.jsx":"41","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Global Section\\CommentSec.jsx":"42","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop Details\\Rate.jsx":"43","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\Profile.jsx":"44","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\Updateprofile.jsx":"45","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\updatepass.jsx":"46"},{"size":30638,"mtime":1689981434249,"results":"47","hashOfConfig":"48"},{"size":7066,"mtime":1689575726623,"results":"49","hashOfConfig":"48"},{"size":346,"mtime":1688611496429,"results":"50","hashOfConfig":"48"},{"size":2844,"mtime":1689901485612,"results":"51","hashOfConfig":"48"},{"size":1447,"mtime":1689827777280,"results":"52","hashOfConfig":"48"},{"size":1650,"mtime":1688611496430,"results":"53","hashOfConfig":"48"},{"size":2174,"mtime":1689826586048,"results":"54","hashOfConfig":"48"},{"size":1677,"mtime":1689978281009,"results":"55","hashOfConfig":"48"},{"size":361,"mtime":1688611496399,"results":"56","hashOfConfig":"48"},{"size":4311,"mtime":1689477481935,"results":"57","hashOfConfig":"48"},{"size":865,"mtime":1689575726643,"results":"58","hashOfConfig":"48"},{"size":673,"mtime":1689575726620,"results":"59","hashOfConfig":"48"},{"size":6221,"mtime":1689678911880,"results":"60","hashOfConfig":"48"},{"size":1064,"mtime":1689757702632,"results":"61","hashOfConfig":"48"},{"size":9767,"mtime":1689757702674,"results":"62","hashOfConfig":"48"},{"size":16260,"mtime":1689981446122,"results":"63","hashOfConfig":"48"},{"size":16274,"mtime":1689891086932,"results":"64","hashOfConfig":"48"},{"size":8450,"mtime":1689984002434,"results":"65","hashOfConfig":"48"},{"size":10033,"mtime":1689901397017,"results":"66","hashOfConfig":"48"},{"size":5471,"mtime":1689575726622,"results":"67","hashOfConfig":"48"},{"size":15943,"mtime":1689915516053,"results":"68","hashOfConfig":"48"},{"size":13547,"mtime":1689575726628,"results":"69","hashOfConfig":"48"},{"size":4377,"mtime":1689466605634,"results":"70","hashOfConfig":"48"},{"size":6115,"mtime":1689890444440,"results":"71","hashOfConfig":"48"},{"size":256,"mtime":1688611496353,"results":"72","hashOfConfig":"48"},{"size":4594,"mtime":1689757702666,"results":"73","hashOfConfig":"48"},{"size":1321,"mtime":1689394898026,"results":"74","hashOfConfig":"48"},{"size":7544,"mtime":1689760846700,"results":"75","hashOfConfig":"48"},{"size":9357,"mtime":1689757702664,"results":"76","hashOfConfig":"48"},{"size":10962,"mtime":1689891360922,"results":"77","hashOfConfig":"48"},{"size":927,"mtime":1688611496406,"results":"78","hashOfConfig":"48"},{"size":6946,"mtime":1689819889798,"results":"79","hashOfConfig":"48"},{"size":5476,"mtime":1689757702577,"results":"80","hashOfConfig":"48"},{"size":7392,"mtime":1689466605587,"results":"81","hashOfConfig":"48"},{"size":3322,"mtime":1689757702578,"results":"82","hashOfConfig":"48"},{"size":1330,"mtime":1689466605629,"results":"83","hashOfConfig":"48"},{"size":2008,"mtime":1689466605653,"results":"84","hashOfConfig":"48"},{"size":8084,"mtime":1689757702624,"results":"85","hashOfConfig":"48"},{"size":350,"mtime":1688611496354,"results":"86","hashOfConfig":"48"},{"size":1002,"mtime":1688611496407,"results":"87","hashOfConfig":"48"},{"size":930,"mtime":1688611496355,"results":"88","hashOfConfig":"48"},{"size":8124,"mtime":1689981470502,"results":"89","hashOfConfig":"48"},{"size":2880,"mtime":1689498210588,"results":"90","hashOfConfig":"48"},{"size":8375,"mtime":1689983352103,"results":"91","hashOfConfig":"48"},{"size":3939,"mtime":1689981416930,"results":"92","hashOfConfig":"48"},{"size":7287,"mtime":1689981488775,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},"1kt8rky",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"103"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"98"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"103"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"98"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"98"},"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Sign\\Sign.jsx",["247","248","249"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Box,FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, Typography } from '@mui/material';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport { useState } from 'react';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useConfirmCodeMutation, useForgotpassMutation, useResetPassMutation, useSignInMutation, useSignupMutation } from '../../services/SignApi';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nexport default function FormDialog() {\r\n\r\n\r\n\r\nconst [Signup , { isLoading : signupLoading }] = useSignupMutation();\r\nconst [SignIn , { isLoading : signinLoading , isError: signInError} ] = useSignInMutation();\r\nconst [Forgotpass , { isLoading : ForgotLoading } ] = useForgotpassMutation();\r\nconst [ConfirmCode , { isLoading : codeLoading } ] = useConfirmCodeMutation();\r\nconst [ ResetPass, { isLoading : resetLoading } ] = useResetPassMutation();\r\n\r\n\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    const [RouteSign , setRouteSign ] = useState(\"signin\");\r\n    const [stepnum, setstepnum] = useState(1);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [Country, setCountry] = React.useState('');\r\n    const [Town, setTown] = React.useState('');\r\n     const [firstName, setName] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [address, setaddress] = useState(\"\");\r\n    const [UserName, setUserName] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [VerificationCode, setvCode] = useState(\"\");\r\n\r\nconst [Message, setMessage] = useState(\"\");\r\n\r\n\r\nconst Navigate = useNavigate()\r\n\r\n\r\n\r\n    const handleSignUp = async () => {\r\n      const result = await Signup({UserName , Password , firstName , Email , Phone , Country , Town , address });\r\n      try {\r\n        // Handle success case\r\n        if (result.data) {\r\n          // Code to execute when signup is successful\r\n          console.log('Signup successful');\r\n          setRouteSign(\"signin\")\r\n          setstepnum(1)\r\n          toast.success(`Account successfully created` , {position: \"top-center\"});\r\n        } else {\r\n          setMessage(\"User Name or Email already exists\")\r\n        }\r\n      } catch (error) {\r\n        // Handle error case\r\n        console.log('Signup error:', error);\r\n      }\r\n    }\r\n\r\n\r\n\r\n                // Call the login mutation from the API slice\r\n                const handleSignin  = async () => {\r\n                  // Call the login mutation from the API slice\r\n                  const result = await SignIn({ Email  , Password });\r\n              \r\n                  if (result.error) {\r\n                    console.log('Error:', result);\r\n                  } else {\r\n                    const { token } = result.data;\r\n                    // Store the token securely (e.g., local storage or cookies)\r\n                    console.log('Token:', token);\r\n                    if (token) {\r\n                      console.log('Signin successful!');\r\n                      localStorage.setItem('token', token); // Save the token in session storage\r\n                    } else {\r\n                      console.error('Signin failed: Token not received');\r\n                    }\r\n        \r\n                   if (localStorage.getItem(\"token\")) {\r\n                    setOpen(false)\r\n                    Navigate(\"/\") }\r\n                  }\r\n\r\n           \r\n                };\r\n\r\n\r\n\r\n                const handleForgotpassword = async () => {\r\n                  const result = await Forgotpass({ Email });\r\n                  if (result.error) {\r\n                    console.log('Send code failed:', result.error);\r\n                    setMessage(\"This email does not exist\")\r\n                  } else {\r\n                    console.log('Send code successful:', result.data);\r\n                  }};\r\n  \r\nconst handleconfirmcode = async () => {\r\n  const result = await ConfirmCode({ Email , VerificationCode});\r\n  if (result.error) {\r\n    console.log('code not match :', result.error);\r\n  } else {\r\n    console.log(' code match successful:', result.data);\r\n    setRouteSign(\"resetpassword\")\r\n\r\n  }\r\n}\r\n\r\n\r\nconst NewPassword = Password\r\n\r\nconst handleresetPassword = async () => {\r\n  const result = await ResetPass({ Email , NewPassword});\r\n  if (result.error) {\r\n    console.log('faild to reset password:', result.error);\r\n  } else {\r\n    toast.success(`Password has been changed successfully` , {position: \"top-center\"});\r\n    console.log('Reset Password successful:', result.data);\r\n  }\r\n}\r\n\r\n\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  \r\n    const handleMouseDownPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n{/* {!signuperror } */}\r\n\r\n             <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}}  onClick={\r\n              ()=>{\r\n                handleClickOpen()\r\n                setRouteSign(\"signin\")\r\n              }\r\n              }>\r\n                 <LoginIcon\r\n                   sx={{ fontSize: \"30px\", color: \"black\" ,}}\r\n                 />\r\n               <Typography color=\"black\" sx={{ ml : \"5px\" ,fontSize : {xs : \"10px\" , md : \"12px\"}}}>Login</Typography>\r\n             </Box>\r\n\r\n                \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n\r\n            {/* <Button variant=\"outlined\" startIcon={<PersonAddAltIcon sx={{fontSize : \"30px\"}}/>}>Sign Up</Button> */}\r\n\r\n\r\n{RouteSign === \"signin\" &&\r\n    <Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n   \r\n   \r\n\r\n    <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n    <Typography sx={{mr:\"10px\" , fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"#92764E\"}} variant='h6'>You don't have account ?</Typography>\r\n    <Typography\r\n       onClick={() => {setRouteSign(\"signup\")\r\n      setMessage(\"\")\r\n      }}\r\n    sx={{fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n    cursor : \"pointer\" , \r\n    \":hover\" : {\r\n        color : \"gray\"\r\n    }\r\n    }} variant='h6'>Sign Up</Typography>\r\n    \r\n    \r\n    </Box>\r\n    \r\n    <Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Sign In</Typography>\r\n    \r\n    <Typography color=\"red\" >{signInError && \"Invalid userName or Password ..\"}</Typography>\r\n\r\n    <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n     ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n            \r\n            \r\n            <TextField\r\n            onChange={(e) => {setEmail(e.target.value)}}\r\n            sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n            id=\"Email\" label=\"Enter your Email\" type=\"text\" />\r\n            \r\n<FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n    variant=\"outlined\">\r\n              <InputLabel htmlFor=\"filled-adornment-password\">Enter Your Password</InputLabel>\r\n              <OutlinedInput\r\n              label=\"Enter Your Password\"\r\n                id=\"filled-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                onChange={(e) => {setPassword(e.target.value)\r\n                  console.log(Password);\r\n                }}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n    {/* <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n    variant=\"outlined\">\r\n              <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\r\n              <OutlinedInput\r\n              label=\"Password\"\r\n                id=\"filled-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      onChange={(e) => {setPassword(e.target.value)\r\n                        console.log(Password);\r\n\r\n                      }}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl> */}\r\n    \r\n                <Button \r\n                onClick={() => {handleSignin()}}\r\n                    sx={{\r\n                        my : \"10px\" ,\r\n                        backgroundColor: \"#92764E\",\r\n                        cursor: \"pointer\",\r\n                        color: \"#FFF\",\r\n                        padding: \"5px 16px\",\r\n                        borderRadius: \"20px\",\r\n                        width : {xs : \"60%\" , md : \"fit-content\" },\r\n                        \":hover\": {\r\n                          color: \"#92764E\",\r\n                          outline: \"1px solid #92764E\",\r\n                        },\r\n                      }}\r\n                \r\n                startIcon={ signinLoading ? <CircularProgress/> :<LoginIcon sx={{fontSize : \"30px\"}}/>}>Sign In</Button>\r\n    \r\n    \r\n            </Box>\r\n    \r\n    \r\n     <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n    <Typography sx={{fontSize:{xs : \"12px\" , md : \"18px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n    cursor : \"pointer\" , \r\n    \":hover\" : {\r\n        color : \"gray\"\r\n    }\r\n    }} variant='h6'\r\n    onClick={()=>{\r\n      setRouteSign(\"forgotpass\")\r\n    }}\r\n    >Forgot Password ?</Typography>\r\n    \r\n    </Box>\r\n    \r\n    </Box>}\r\n\r\n{/* ______________________________________________________________________________ */}\r\n\r\n\r\n{RouteSign === \"signup\" &&\r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n\r\n   <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n   <Typography sx={{mr:\"10px\" , fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"#92764E\"}} variant='h6'>You have an account ?</Typography>\r\n   <Typography \r\n   onClick={() => {setRouteSign(\"signin\")\r\n  setMessage(\"\")\r\n  }}\r\n   sx={{fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n   cursor : \"pointer\" , \r\n   \":hover\" : {\r\n       color : \"gray\"\r\n   }\r\n   }} variant='h6'>Sign In</Typography>\r\n   </Box>\r\n   \r\n   <Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Sign Up</Typography>\r\n   \r\n    <Typography color=\"red\" >{Message}</Typography>\r\n     {/* _____________________________________________________________________________ */}\r\n   {stepnum === 1 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <TextField\r\n          onChange={(e) => {setUserName(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"username\" label=\"User name\" type=\"text\" />\r\n  \r\n  \r\n  \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel >Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Password\"\r\n            onChange={(e) => {setPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    onClick={handleClickShowPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n             \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel>Confirm Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Confirm Password\"\r\n            onChange={(e) => {setConfirmPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n  \r\n\r\n            <Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n            <Box sx={{flexGrow : 1}} />\r\n\r\n            <IconButton \r\n\r\n            onClick={() => {\r\n                if (UserName !== \"\" && Password !== \"\" && Password === ConfirmPassword ) {\r\n                 if (Password.length < 6) {\r\n                  setMessage(\"Password must contains at least 6 characters\")\r\n                 }else {\r\n                  setstepnum(2)\r\n                  setMessage(\"\")\r\n                 }\r\n                } else {\r\n                    setMessage(\"please fill user Name and Password, correctly.\")\r\n                }\r\n            }}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      backgroundColor: \"#92764E\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#FFF\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                        color: \"#92764E\",\r\n                        outline: \"1px solid #92764E\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowForwardIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n\r\n   {/* _____________________________________________________________________________ */}\r\n   \r\n   {stepnum === 2 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <TextField\r\n          required\r\n          onChange={(e) => {setEmail(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Email\" label=\"Email\" type=\"email\" />\r\n\r\n\r\n                        <TextField required\r\n                        onChange={(e) => {setName(e.target.value)}}\r\n                sx={{width: {xs : \"95%\" , md : \"80%\" },fontSize:\"10px\", borderRadius : \"30px\" , backgroundColor:\"#E9E7DB\",border: \"none\" , my : \"10px\"}}\r\n                id=\"first\" label=\"First Name\" type=\"text\" />\r\n\r\n<TextField\r\n          onChange={(e) => {setPhone(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"phone\" label=\"Phone\" type=\"number\" />\r\n  \r\n  \r\n\r\n\r\n<Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n<IconButton \r\nonClick={() => {setstepnum(1)}}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      color: \"#92764E\",\r\n                      outline: \"1px solid #92764E\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                       backgroundColor: \"#92764E\",\r\n                       cursor: \"pointer\",\r\n                       color: \"#FFF\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowBackIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n\r\n<IconButton \r\nonClick={() => {\r\n\r\nif (firstName !== \"\" && Email !== \"\" && Email.includes(\"@\")) {\r\n    setstepnum(3)\r\n    setMessage(\"\")\r\n} else {\r\n    setMessage(\"please, fill the required data.\")\r\n}\r\n\r\n\r\n}}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      backgroundColor: \"#92764E\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#FFF\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                        color: \"#92764E\",\r\n                        outline: \"1px solid #92764E\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowForwardIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n     {/* _____________________________________________________________________________ */}\r\n   {stepnum === 3 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <FormControl required sx={{width : {xs : \"95%\" , md : \"80%\"}, my : \"10px\" ,borderRadius : \"30px\", backgroundColor:\"#E9E7DB\"}}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={Country}\r\n          label=\"Country\"\r\n          onChange={(eo) => { setCountry(eo.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"Egypt\">Egypt</MenuItem>\r\n          <MenuItem value=\"Canada\">Canada</MenuItem>\r\n          <MenuItem value=\"Brazil\">Brazil</MenuItem>\r\n          <MenuItem value=\"United State\">United State</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n  \r\n\r\n  <TextField\r\n          onChange={(e) => {setTown(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Town\" label=\"Town\" type=\"text\" />\r\n\r\n\r\n<TextField\r\n          onChange={(e) => {setaddress(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Adderss\" label=\"Address\" type=\"text\" />\r\n  \r\n\r\n\r\n  <Box>\r\n        <Typography>I agree with Furni Pro's <span style={{textDecoration : \"underline\" , color : \"gray\" , cursor : \"pointer\"}}>Terms Of Service. Privacy Policy</span></Typography>\r\n  </Box>\r\n\r\n<Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n<IconButton \r\nonClick={() => {setstepnum(2)}}\r\n\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      color: \"#92764E\",\r\n                      outline: \"1px solid #92764E\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                       backgroundColor: \"#92764E\",\r\n                       cursor: \"pointer\",\r\n                       color: \"#FFF\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowBackIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n\r\n              <Button \r\n\r\n\r\n              onClick={() => {\r\n\r\n                if (Country !== \"\") {\r\n                    handleSignUp()\r\n                    setMessage(\"\")\r\n                } else {\r\n                    setMessage(\"Please Choose Your Country\")\r\n                }\r\n            \r\n              }}\r\nsx={{\r\n    my : \"10px\" ,\r\n    backgroundColor: \"#92764E\",\r\n    cursor: \"pointer\",\r\n    color: \"#FFF\",\r\n    padding: \"5px 16px\",\r\n    borderRadius: \"20px\",\r\n    width : {xs : \"60%\" , md : \"fit-content\" },\r\n    \":hover\": {\r\n      color: \"#92764E\",\r\n      outline: \"1px solid #92764E\",\r\n    },\r\n  }}\r\n\r\nstartIcon={signupLoading ?     <CircularProgress />\r\n: <PersonAddAltIcon sx={{fontSize : \"30px\"}}/>}>Create Account</Button>\r\n\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n   \r\n   \r\n   </Box>\r\n}\r\n\r\n{/* _______________________________________________________________________________ */}\r\n{RouteSign === \"forgotpass\" && \r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n\r\n<Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Recover Your Account</Typography>\r\n<Typography color=\"red\" >{Message}</Typography>\r\n<Typography sx={{width : { xs : \"80%\" , md : \"75%\"}}}>Just enter the email you used to sign up and we’ll help you sort this out.</Typography>\r\n\r\n<TextField\r\n            onChange={(e) => {setEmail(e.target.value)\r\n            console.log(Email)\r\n            }}\r\n            sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n            id=\"Email\" label=\"Enter Your email address\" type=\"text\" />\r\n\r\n\r\n\r\n                      <Button \r\n                      onClick={() => {\r\n                        handleForgotpassword()\r\n                        if (Email !== \"\") {\r\n                          setRouteSign(\"resetcode\")\r\n                        } else {\r\n                          setMessage(\"Please enter your email\")\r\n                        }\r\n                      }}\r\n                           sx={{\r\n                            my : \"10px\" ,\r\n                            backgroundColor: \"#92764E\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: \"5px 16px\",\r\n                            borderRadius: \"20px\",\r\n                            width : {xs : \"60%\" , md : \"fit-content\" },\r\n                            \":hover\": {\r\n                              color: \"#92764E\",\r\n                              outline: \"1px solid #92764E\",\r\n                            },\r\n                          }}\r\n                      >Recover My Account</Button>\r\n\r\n                   <Box sx={{display : \"flex\" , alignItems : \"center\"}}>\r\n                    <Typography>Not You ?</Typography>\r\n                    <Typography \r\n                       onClick={() => {setRouteSign(\"signin\")}}\r\n                      sx={{fontSize:{xs : \"16px\" , ml : \"10px\" ,md : \"20px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n                      cursor : \"pointer\" , \r\n                      \":hover\" : {\r\n                      color : \"gray\"\r\n                      }\r\n                      }} variant='h6'>Sign In</Typography>\r\n                    </Box>   \r\n\r\n</Box>\r\n}\r\n\r\n{/* __________________________________________________________________ */}\r\n\r\n{RouteSign === \"resetcode\" && \r\n\r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }} >\r\n<Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Verification Code</Typography>\r\n\r\n<Typography sx={{width : { xs : \"80%\" , md : \"75%\"}}}>Please enter the verification code that was sent to your email</Typography>\r\n\r\n\r\n<TextField\r\n            onChange={(e) => {setvCode(e.target.value)\r\n            }}\r\n            sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n            id=\"vcode\" label=\"Enter Your verification Code\" type=\"text\" />\r\n\r\n\r\n<Button \r\n                      onClick={() => {\r\n                        handleconfirmcode()\r\n                      }}\r\n                           sx={{\r\n                            my : \"10px\" ,\r\n                            backgroundColor: \"#92764E\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: \"5px 16px\",\r\n                            borderRadius: \"20px\",\r\n                            width : {xs : \"60%\" , md : \"fit-content\" },\r\n                            \":hover\": {\r\n                              color: \"#92764E\",\r\n                              outline: \"1px solid #92764E\",\r\n                            },\r\n                          }}\r\n                      >Confirm Code</Button>\r\n\r\n\r\n\r\n<Box sx={{display : \"flex\" , width : { xs : \"80%\" , md : \"75%\"} }}>\r\n<Typography>You haven't received the code yet ?</Typography>\r\n<Typography \r\nonClick={() => {setRouteSign(\"forgotpass\")}}\r\nsx={{color : \"blue\" , cursor : \"pointer\" , ml : \"10px\" , textDecoration : \"underline\"}}>Resend Code</Typography>\r\n\r\n</Box>\r\n\r\n</Box>\r\n}\r\n{/* _______________________________________________________________________ */}\r\n\r\n{RouteSign === \"resetpassword\" && \r\n\r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }} >\r\n<Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Reset Password</Typography>\r\n\r\n<Typography>{Message}</Typography>\r\n<FormControl sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel >New Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"New Password\"\r\n            onChange={(e) => {setPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    onClick={handleClickShowPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n             \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel>Confirm New Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Confirm New Password\"\r\n            onChange={(e) => {setConfirmPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n\r\n<Button \r\n                      onClick={() => {\r\n\r\n                        if (Password !== \"\" && ConfirmPassword !==\"\" && Password === ConfirmPassword && Password.length >= 6 ) {\r\n                          handleresetPassword()\r\n                          setOpen(false)\r\n                        } else {\r\n                          setMessage(\"Password must contains at least 6 characters\")\r\n                        }\r\n\r\n                      }}\r\n                           sx={{\r\n                            my : \"10px\" ,\r\n                            backgroundColor: \"#92764E\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: \"5px 16px\",\r\n                            borderRadius: \"20px\",\r\n                            width : {xs : \"60%\" , md : \"fit-content\" },\r\n                            \":hover\": {\r\n                              color: \"#92764E\",\r\n                              outline: \"1px solid #92764E\",\r\n                            },\r\n                          }}\r\n                      >Confirm</Button>\r\n\r\n\r\n</Box>\r\n}\r\n\r\n\r\n\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\BlogDetails\\BlogDetails.jsx",["250","251"],[],"import React, { useEffect, useState } from 'react';\r\nimport ScrollToTop from '../../ExternalMethods/ScrollToTop';\r\nimport BannerSection from '../Home/HomeSections/bannerSection';\r\nimport {Box, Button, CircularProgress, IconButton, Typography } from '@mui/material';\r\nimport { useGetOneblogQuery, useGetblogsByNameQuery } from '../../services/productApi';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport Person2OutlinedIcon from '@mui/icons-material/Person2Outlined';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\r\nimport FacebookOutlinedIcon from '@mui/icons-material/FacebookOutlined';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport Commentsec from '../Global Section/CommentSec';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\n\r\nconst BlogDetails = () => {\r\n\r\n  const Tags = [\r\n    {Tag : \"Chairs\"} , \r\n    {Tag : \"BedRoom\"} , \r\n    {Tag : \"Bed\"} , \r\n    {Tag : \"Cabinet\"} , \r\n    {Tag : \"Sofa\"} , \r\n    {Tag : \"Decor\"} , \r\n    {Tag : \"Office\"} , \r\n    {Tag : \"Lamp\"} , \r\n    {Tag : \"Accent Furniture\"} , \r\n    {Tag : \"Special Offer\"} , \r\n  ]\r\n\r\n  const {id} = useParams()\r\n\r\n    const { data , error, isLoading } = useGetOneblogQuery(id);\r\n    let LatestBlogs = useGetblogsByNameQuery().data\r\n\r\n\r\n    const CommentSecWidth = 90;\r\n  const CommentSecName = \"blogComment\";\r\n\r\n\r\n    const Navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n         <Helmet>\r\n      <title>Blod Details</title>\r\n    </Helmet>\r\n    <ScrollToTop/>\r\n    <BannerSection  PageName=\"Blog Details\" />\r\n\r\n    {error && \r\n   <Box  sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n    <Typography variant=\"h6\">Data Not Found</Typography>\r\n    </Box>\r\n   }\r\n\r\n\r\n     {isLoading && \r\n      <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n      <CircularProgress />\r\n  </Box>\r\n     \r\n     }\r\n\r\n<Box sx={{ p : \"50px 0\" , width : \"100%\" , display : \"flex\" , justifyContent : \"center\"}}>\r\n\r\n<Box sx={{borderRadius : \"15px\" ,mr : {xs : \"0\" , md : \"15px\"} , width : {xs : \"90%\" , md : \"55%\" }}}>\r\n\r\n{data && \r\n\r\n<>\r\n    <Box sx={{ border : \"1px solid black\", mx: \"auto\" ,p : \"15px\" ,borderRadius : \"15px\"  , width : \"90%\"}}>\r\n    \r\n        <Typography variant='h6' sx={{mx : \"auto\" , width : \"95%\" , fontSize: \"18px\" ,fontWeight : \"700\"}}>{data.Name}</Typography>\r\n        \r\n        <Box sx={{width : {xs :\"95%\" , md : \"75%\"} , paddingBottom : \"20px\" ,ml :\"10px\" , display : \"flex\" , alignItems : \"center\" , justifyContent : \"space-between\"}}>\r\n        <Box sx={{display : \"flex\" , alignItems : \"center\"  }}>\r\n            <Person2OutlinedIcon  sx={{fontSize : \"12px\" , mx:\"5px\"}} />\r\n            <Typography sx={{fontSize : \"10px\"}}>{data.postBy}</Typography>\r\n            \r\n        </Box>    \r\n        <Box sx={{display : \"flex\" , alignItems : \"center\" }}>\r\n            <SchoolOutlinedIcon sx={{fontSize : \"12px\" , mx:\"5px\"}} />\r\n            <Typography sx={{fontSize : \"10px\"}} >{data.category}</Typography>\r\n            \r\n        </Box>   \r\n        <Box sx={{display : \"flex\" , alignItems : \"center\"}}>\r\n            <DateRangeOutlinedIcon  sx={{fontSize : \"12px\" , mx:\"5px\"}} />\r\n             <Typography sx={{fontSize : \"10px\"}} >{data.date}</Typography>\r\n            \r\n        </Box>   \r\n        \r\n        <Box sx={{display : \"flex\" , alignItems : \"center\" }}>\r\n            <VisibilityOutlinedIcon  sx={{fontSize : \"12px\" , mx:\"5px\"}} />\r\n             <Typography sx={{fontSize : \"10px\"}} >{data.views}K</Typography>\r\n            \r\n        </Box>\r\n        \r\n        </Box>\r\n        \r\n        <Box sx={{width : \"95%\" , height : \"350px\" ,mx : \"auto\" }}>\r\n        <img style={{width : \"100%\" , height: \"100%\" , borderRadius : \"15px\"}} loading='lazy' src={data.imageLink} alt=\"blog Details\"  />\r\n        \r\n        </Box>\r\n        \r\n        \r\n        <Box sx={{width : \"95%\" , mx :\"auto\"  , my : \"20px\"}}>\r\n            <Typography variant='p'>\r\n                {data.description}\r\n            </Typography>\r\n        </Box>\r\n    </Box>\r\n    \r\n    <Box sx={{width : \"90%\" , height : \"70px\" , p : \"10px\" ,bgcolor : \"#F3F2EE\" , my : \"10px\" ,mx : \"auto\" , display : \"flex\" , flexDirection : {xs : \"column\" , md : \"row\"} ,alignItems : \"center\" , justifyContent : \"space-around\"}}>\r\n<Box display=\"flex\" alignItems=\"center\">\r\n    <Typography variant='h6' mr=\"3px\" sx={{fontSize : \"15px\"}} >Tags : </Typography>\r\n    <Typography variant='p' sx={{fontSize : \"11px\"}}>{data.tags}</Typography>\r\n</Box>\r\n\r\n<Box display=\"flex\" alignItems=\"center\">\r\n<Typography variant='h6' mr=\"3px\" sx={{fontSize : \"15px\"}}  >Share :</Typography>\r\n    <IconButton >\r\n    <FacebookOutlinedIcon sx={{color :\"#AF8E60\" , \":hover\" : {color : \"white\"}}}/>\r\n    </IconButton>\r\n    <IconButton>\r\n        <TwitterIcon sx={{color :\"#AF8E60\" , \":hover\" : {color : \"white\"}}} />\r\n    </IconButton>\r\n    <IconButton>\r\n        <LinkedInIcon  sx={{color :\"#AF8E60\" , \":hover\" : {color : \"white\"}}}  />\r\n    </IconButton>\r\n    <IconButton >\r\n    <YouTubeIcon sx={{color :\"#AF8E60\" , \":hover\" : {color : \"white\"}}}  />\r\n    </IconButton>\r\n</Box>\r\n\r\n    </Box>\r\n\r\n<Commentsec {...{data , CommentSecWidth , CommentSecName}} />\r\n\r\n</>\r\n}\r\n\r\n</Box>\r\n\r\n\r\n{LatestBlogs && \r\n\r\n<Box sx={{width : \"25%\" , display : {xs : \"none\" , md : \"block\"}}} >\r\n\r\n\r\n\r\n<Box sx={{width : \"100%\" , border : \"1px solid black\" , borderRadius : \"15px\" , p:\"10px\"}}>\r\n<Typography mb=\"10px\" variant='h6'>Latest Post</Typography>\r\n<hr/>\r\n\r\n\r\n<Box mt=\"5px\">\r\n{LatestBlogs.slice(-3).map((blog) => (\r\n  <Box key={blog.id} sx={{p : \"10px 0\" , display : \"flex\"}} \r\n  onClick={() => {Navigate(`/BlogDetails/${blog.id}`)}}\r\n  >\r\n<Box sx={{width : \"25%\" , height : \"80px\" , mr : \"5px\"}}>\r\n     <img style={{width : \"100%\" , height : \"100%\"}} loading='lazy' src={blog.imageLink} alt=\"blog Details\" />\r\n</Box>\r\n\r\n<Box sx={{width : \"75%\"}} >\r\n<Typography variant='h6' sx={{textDecoration : \"underline\" ,height : \"50px\" , overflow : \"hidden\" ,fontSize : \"13px\" , cursor : \"pointer\" , fontWeight : \"700\"}}>{blog.Name}</Typography>\r\n<Box sx={{display : \"flex\" , color : \"#CBCBCB\" }}>\r\n  <DateRangeOutlinedIcon sx={{fontSize : \"17px\"}} />\r\n  <Typography variant='h6' sx={{fontSize : \"13px\" }}>{blog.date}</Typography>\r\n  \r\n</Box>\r\n\r\n</Box>\r\n  </Box>\r\n))}\r\n</Box>\r\n\r\n\r\n\r\n\r\n\r\n</Box>\r\n\r\n\r\n<Box sx={{width : \"100%\" , mt :\"15px\" ,border : \"1px solid black\" , borderRadius : \"15px\" , p:\"10px\"}}>\r\n<Typography mb=\"10px\" variant='h6'>Tags Cloud</Typography>\r\n<hr/>\r\n\r\n{Tags.map((tag) => (\r\n    <Button key={tag.Tag} sx={{bgcolor : \"#F3F2EE\" , color : \"black\" , m : \"5px\" , borderRadius : \"10px\" , fontSize : \"12px\"}} >{tag.Tag}</Button>\r\n))}\r\n\r\n\r\n\r\n</Box>\r\n\r\n\r\n\r\n</Box>\r\n\r\n}\r\n\r\n</Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BlogDetails;\r\n",[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\index.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\App.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\store.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\FavSlice.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\productApi.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\SignApi.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Global Section\\Notifiction.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\services\\CartSlice.js",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\Home.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\About.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Contact\\Contact.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Header\\CoponCode.jsx",["252"],[],"import { Box, IconButton, Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\n\r\nconst CoponCode = () => {\r\n\r\n    return (\r\n    <>\r\n    <Box position=\"reltive\" sx={{bgcolor : \"#E9E7DB\" , p : \"6px 0\" , height : \"23px\"}} >\r\n    <Box className=\"copon\" sx={{  display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}}>\r\n        <Typography style={{fontWeight : \"bold\", fontSize :  {xs : \"12px\" ,md:\"16px\" } , mx : \"3px\"}} > Use Coupon Code  </Typography>\r\n        <Typography sx={{fontWeight : \"bold\" , fontSize :  {xs : \"12px\" ,md:\"16px\" } , mx : \"3px\", color : \"blue\"}}> furnipro20 </Typography> \r\n        <Typography style={{fontWeight : \"bold\",fontSize :  {xs : \"12px\" ,md:\"16px\" } , mx : \"3px\"}} > to get</Typography>\r\n        <Typography style={{fontWeight : \"bold\",fontSize :  {xs : \"12px\" ,md:\"16px\" } , mx : \"3px\"}} > 20% </Typography>\r\n        <Typography style={{fontWeight : \"bold\", fontSize :  {xs : \"12px\" ,md:\"16px\" } , mx : \"3px\"}} > off </Typography>\r\n    </Box>\r\n    </Box>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default CoponCode;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop Details\\Shopdetails.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Header\\Header.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Cart\\Cart.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Footer\\Footer.jsx",["253"],[],"import { Box, Button, IconButton, Typography } from \"@mui/material\";\r\nimport FacebookOutlinedIcon from \"@mui/icons-material/FacebookOutlined\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport PinterestIcon from \"@mui/icons-material/Pinterest\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport WhatsAppIcon from \"@mui/icons-material/WhatsApp\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Subscribe from \"./Subscribe\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst Footer = () => {\r\n  const pages = [\r\n    { name: \"Home\", Link: \"/\" },\r\n    { name: \"About\", Link: \"About\" },\r\n    { name: \"Shop\", Link: \"Shop\" },\r\n    { name: \"Blog\", Link: \"Blog\" },\r\n    { name: \"Contact\", Link: \"Contact\" },\r\n  ];\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  let decodedToken;\r\n  const token = localStorage.getItem('token')\r\n\r\n  if (token) {\r\n    decodedToken = jwtDecode(token);\r\n  }\r\n  const handleSignout =  () => {\r\n    localStorage.removeItem(\"token\")\r\n     navigate(\"/\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Subscribe/>\r\n      <Box sx={{ width: \"100%\", height: { xs: \"500\", md: \"400px\" } }}>\r\n        <Box\r\n          className=\"footer\"\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column \",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexWrap: \"nowrap\",\r\n              flexDirection: { xs: \"column\", md: \"row\" },\r\n              border: \"1px solid gray\",\r\n              width: \"97%\",\r\n              height: \"70%\",\r\n            }}\r\n          >\r\n            <Box sx={{ m: \"20px 60px\", p: \"10px\", height: \"180px\" }}>\r\n              <Typography variant=\"h6\" sx={{ color: \"white\" }}>\r\n                About Us\r\n              </Typography>\r\n              <Box sx={{ borderTop: \"1px solid gray\", width: \"70px\" }} />\r\n              <Typography variant=\"p\" sx={{ fontSize: \"10px\", color: \"gray\" }}>\r\n                Etoshi is an exating contrmpotary brand\r\n                <br />\r\n                which focuses on high quality products\r\n                <br />\r\n                graphics with britich style\r\n              </Typography>\r\n              <Box sx={{ mt: \"20px\", display: \"flex\" }}>\r\n                <MailIcon sx={{ color: \"yellow\" }} />\r\n                <Typography sx={{ color: \"#FFF\", ml: \"10px\" }} variant=\"p\">\r\n                  info@mydomain.com\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ mt: \"20px\", display: \"flex\" }}>\r\n                <LocalPhoneIcon sx={{ color: \"yellow\" }} />\r\n                <Typography sx={{ color: \"#FFF\", ml: \"10px\" }} variant=\"p\">\r\n                  +777 2345 8892\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                padding: \"20px\",\r\n                border: \"1px solid gray\",\r\n                width: { xs: \"80%\", md: \"35%\" },\r\n                height: \"110px\",\r\n                borderRadius: \"15px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Box sx={{ width: \"100px\", cursor: \"pointer\" }}>\r\n                <img\r\n                  style={{ width: \"100%\", Height: \"100%\" }}\r\n                  src=\"../../../Imgs/Logo.png\"\r\n                  alt=\"Furni Pro\"\r\n                  loading='lazy'\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  sx={{ color: \"gray\", marginRight: \"25px\" }}\r\n                >\r\n                  Follow Us\r\n                </Typography>\r\n                <IconButton  sx={{ color: \"orange\"}}>\r\n                  <FacebookOutlinedIcon sx={{fontSize : {xs : \"13px\" , md : \"20px\"}}} />\r\n                </IconButton>\r\n                <IconButton  sx={{ color: \"orange\"}}>\r\n                  <TwitterIcon sx={{fontSize : {xs : \"13px\" , md : \"20px\"}}} />\r\n                </IconButton>{\" \"}\r\n                <IconButton  sx={{ color: \"orange\" }}>\r\n                  <PinterestIcon sx={{fontSize : {xs : \"13px\" , md : \"20px\"}}} />\r\n                </IconButton>{\" \"}\r\n                <IconButton  sx={{ color: \"orange\"}}>\r\n                  <LinkedInIcon sx={{fontSize : {xs : \"13px\" , md : \"20px\"}}} />\r\n                </IconButton>{\" \"}\r\n                <IconButton  sx={{ color: \"orange\" }}>\r\n                  <WhatsAppIcon sx={{fontSize : {xs : \"13px\" , md : \"20px\"}}} />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <Box\r\n                sx={{\r\n                  mb: \"10px\",\r\n                  display: \"flex\",\r\n                  justifyContent : \"center\" , \r\n                  width : \"100%\" , \r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <Button\r\n                    key={page.name}\r\n                    sx={{\r\n                      display: \"block\",\r\n                      color: \"gray\",\r\n                      fontSize: \"10px\",\r\n                    }}\r\n                    onClick={() => {\r\n                      navigate(`${page.Link}`);\r\n                    }}\r\n                  >\r\n                    {page.name}\r\n                  </Button>\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box sx={{ height: \"180px\", m: \"20px 60px\", p: \"10px\" }}>\r\n              <Typography variant=\"h6\" sx={{ color: \"white\" }}>\r\n                My Account\r\n              </Typography>\r\n              <Box sx={{ borderTop: \"1px solid gray\", width: \"70px\" }} />\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"100\",\r\n                }}\r\n              >\r\n                <Typography onClick={() => {decodedToken ? navigate(\"/profile\") : navigate(\"/\") }} variant=\"p\" sx={{ color: \"gray\", m: \"5px 0\" , cursor : \"pointer\" }}>\r\n                  My Order\r\n                </Typography>\r\n                <Typography variant=\"p\" sx={{ color: \"gray\", m: \"5px 0\" ,  cursor : \"pointer\"}}>\r\n                  My Credit\r\n                </Typography>\r\n                <Typography variant=\"p\" onClick={() => { \r\n                  decodedToken ? navigate(\"/profile\") : navigate(\"/\")\r\n\r\n                }} sx={{ color: \"gray\", m: \"5px 0\" ,  cursor : \"pointer\" }}>\r\n                  My Adresses\r\n                </Typography>\r\n                <Typography variant=\"p\" onClick={() => {decodedToken ? navigate(\"/profile\") : navigate(\"/\") }}  sx={{ color: \"gray\", m: \"5px 0\" , cursor : \"pointer\" }}>\r\n                  My Personal Info\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box sx={{ width: \"97%\", height: {xs : \"fit-content\" , md : \"50px\"}, border: \"1px solid gray\",\r\n           display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"\r\n           }}>\r\n          <Box sx={{width : \"70%\" , display : \"flex\" , flexDirection : {xs : \"column\" , md : \"row\"} ,alignItems : \"center\" , justifyContent : \"space-between\" }}>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                  <Typography  variant=\"p\" sx={{color : \"gray\" , fontSize : \"13px\"}} >Terms Of Service</Typography>\r\n                  <Typography variant=\"p\"  sx={{m : \"0 20px\" ,color : \"gray\", fontSize : \"13px\"}} >|</Typography>\r\n                  <Typography variant=\"p\"  sx={{color : \"orange\" , fontSize : \"13px\"}} >Privacy Policy</Typography>\r\n              </Box>\r\n              <Box>\r\n            <IconButton>\r\n                <img style={{width : \"40px\"}} src=\"../../../Imgs/paypal.png\" loading='lazy' alt=\"paypal\"/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <img style={{width : \"40px\"}} src=\"../../../Imgs/visa.png\" loading='lazy' alt=\"visa\"/>\r\n            </IconButton>     <IconButton>\r\n                <img style={{width : \"40px\"}} src=\"../../../Imgs/master card.png\" loading='lazy' alt=\"card\"/>\r\n            </IconButton>\r\n              </Box>\r\n          </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Fav\\Fav.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Blog\\Blog.jsx",["254"],[],"import React from 'react';\r\nimport ScrollToTop from '../../ExternalMethods/ScrollToTop';\r\nimport BannerSection from '../Home/HomeSections/bannerSection';\r\nimport { Box, Button, CircularProgress, Typography } from '@mui/material';\r\nimport { useGetblogsByNameQuery } from '../../services/productApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\nimport ArrowRightAltOutlinedIcon from '@mui/icons-material/ArrowRightAltOutlined';\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Blog = () => {\r\n\r\n  const Tags = [\r\n    {Tag : \"Chairs\"} , \r\n    {Tag : \"BedRoom\"} , \r\n    {Tag : \"Bed\"} , \r\n    {Tag : \"Cabinet\"} , \r\n    {Tag : \"Sofa\"} , \r\n    {Tag : \"Decor\"} , \r\n    {Tag : \"Office\"} , \r\n    {Tag : \"Lamp\"} , \r\n    {Tag : \"Accent Furniture\"} , \r\n    {Tag : \"Special Offer\"} , \r\n  ]\r\n\r\n\r\n    const { data , error, isLoading } = useGetblogsByNameQuery();\r\n\r\n    \r\n    const Navigate = useNavigate();\r\n\r\n\r\n    return (\r\n        <>\r\n         <Helmet>\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Blog</title>\r\n    </Helmet>\r\n    <ScrollToTop/>\r\n    <BannerSection  PageName=\"Blog\" />\r\n\r\n    {error && \r\n   <Box  sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n    <Typography variant=\"h6\">Data Not Found</Typography>\r\n    </Box>\r\n   }\r\n\r\n\r\n     {isLoading && \r\n      <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n      <CircularProgress />\r\n  </Box>\r\n     \r\n     }\r\n\r\n<Box sx={{ p : \"50px 0\" , width : \"100%\" , display : \"flex\" , justifyContent : \"center\" , alignItems : {xs : \"center\" , md : \"flex-start\"} , flexDirection : {xs : \"column\" , md : \"row\"}}}>\r\n\r\n{data && \r\n\r\n\r\n<Box sx={{display : \"flex\" ,flexWrap : \"wrap\" , justifyContent : \"center\" , width : {xs : \"100%\" , md : \"50%\" }}}>\r\n\r\n{data.map((blog) => (\r\n\r\n<Box\r\nkey={blog.id}\r\n  className=\"Card\"\r\n  sx={{\r\n    width : \"270px\" ,\r\n    height: \"380px\",\r\n    backgroundColor: \"#F3F2EE\",\r\n    borderRadius: \"15px\",\r\n    padding: \"10px\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    cursor: \"pointer\",\r\n    mx : \"10px\" ,\r\n    my : \"10px\"\r\n  }}\r\n\r\n>\r\n\r\n  <Box sx={{ width: \"95%\", height: \"55%\", mx: \"auto\" , mt : \"5px\" , position : \"relative\"}}>\r\n    <img\r\n      style={{ width: \"100%\", height: \"100%\" , borderRadius: \"15px\" }}\r\n      src={blog.imageLink}\r\n      alt=\"blog photo\"\r\n      loading='lazy'\r\n    />\r\n    <Box sx={{position : \"absolute\" , bottom : \"0\" , right : \"0\",bgcolor : \"#F3F2EE\" , textAlign : \"center\" , width : \"60px\" , p : \"5px 0\" , borderTopLeftRadius : \"15px\"}}>\r\n      <Typography variant='h6' fontSize=\"12px\">{blog.date}</Typography>\r\n    </Box>\r\n  </Box>\r\n  <Box\r\n    sx={{\r\n      p: \"5px\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      bgcolor: \"#F3F2EE\",\r\n      mx: \"auto\",\r\n      width: \"95%\",\r\n      height: \"45%\",\r\n      borderRadius: \"15px\",\r\n    }}\r\n  >\r\n\r\n    <Box sx={{width : \"100%\" ,display : \"flex\" , alignItems : \"center\" , color : \"gray\"}}>\r\n    <PersonOutlinedIcon fontSize='12px'/>\r\n    <Typography variant='h6' sx={{fontSize : \"12px\"}} > By Admin</Typography>\r\n    </Box>\r\n\r\n<Box sx={{height : \"50px\" , overflow : \"hidden\" , width : \"100%\" , mt : \"15px\" }}>\r\n<Typography variant=\"h6\" fontSize=\"15px\" fontWeight=\"700\" >{blog.Name}</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ borderBottom : \"2px solid gray\" , width : \"95%\" , my : \"15px\"}} />\r\n\r\n\r\n\r\n<Box sx={{width : '100%'}}>\r\n\r\n    <Button \r\n        onClick={() => {\r\n          Navigate(`/BlogDetails/${blog.id}`)\r\n        }}\r\n    sx={{color : \"gray\"  , \":hover\" : {color : \"black\"}}}>\r\n      Read More \r\n      <ArrowRightAltOutlinedIcon/>\r\n    </Button>\r\n</Box>\r\n\r\n  </Box>\r\n</Box>\r\n\r\n))}\r\n\r\n\r\n</Box>\r\n\r\n\r\n\r\n\r\n}\r\n\r\n{data && \r\n\r\n<Box sx={{width : {xs :\"90%\" , md : \"25%\"}  , mt : {xs : \"30px\" , md : \"0\"}}} >\r\n\r\n\r\n\r\n<Box sx={{width : \"100%\" , border : \"1px solid black\" ,borderRadius : \"15px\" , p:\"10px 0\"}}>\r\n<Typography mb=\"10px\" ml=\"10px\" variant='h6'>Latest Post</Typography>\r\n<hr style={{width : \"90%\" , margin : \"0 auto\"}}/>\r\n\r\n\r\n<Box mt=\"5px\">\r\n{data.slice(-3).map((blog) => (\r\n  <Box key={blog.id} sx={{p : \"10px 0\" , m : \"0 10px\" ,display : \"flex\"}}>\r\n<Box sx={{width : \"25%\" , height : \"80px\" , mr : \"5px\"}}>\r\n     <img style={{width : \"100%\" , height : \"100%\"}} src={blog.imageLink} loading='lazy' alt=\"blod Details\" />\r\n</Box>\r\n\r\n<Box sx={{width : \"75%\"}} >\r\n<Typography variant='h6' sx={{textDecoration : \"underline\" ,height : \"50px\" , overflow : \"hidden\" ,fontSize : \"13px\" , cursor : \"pointer\" , fontWeight : \"700\"}}>{blog.Name}</Typography>\r\n<Box sx={{display : \"flex\" , color : \"#CBCBCB\" }}>\r\n  <DateRangeOutlinedIcon sx={{fontSize : \"17px\"}} />\r\n  <Typography variant='h6' sx={{fontSize : \"13px\" }}>{blog.date}</Typography>\r\n  \r\n</Box>\r\n\r\n</Box>\r\n  </Box>\r\n))}\r\n</Box>\r\n\r\n\r\n\r\n\r\n\r\n</Box>\r\n\r\n\r\n<Box sx={{width : \"100%\" , mt :\"15px\" ,border : \"1px solid black\" , borderRadius : \"15px\" }}>\r\n<Typography mb=\"10px\" variant='h6' ml=\"10px\" >Tags Cloud</Typography>\r\n<hr style={{width : \"90%\" , margin : \"0 auto\"}}/>\r\n\r\n{Tags.map((tag) => (\r\n    <Button key={tag.Tag} sx={{bgcolor : \"#F3F2EE\" , color : \"black\" , m : \"5px\" , borderRadius : \"10px\" , fontSize : \"12px\"}} >{tag.Tag}</Button>\r\n))}\r\n\r\n\r\n\r\n</Box>\r\n\r\n\r\n\r\n</Box>\r\n\r\n}\r\n\r\n</Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop\\Shop.jsx",["255","256","257","258"],[],"import React from 'react';\r\nimport {\r\n    Box,\r\n    Chip,\r\n    CircularProgress,\r\n    IconButton,\r\n    Rating,\r\n    Stack,\r\n    Typography,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Pagination,\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails\r\n  } from\r\n    \"@mui/material\";\r\n  import { useState } from \"react\";\r\n  import FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\n  import FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n  import SearchIcon from \"@mui/icons-material/Search\";\r\n  import {  useGetproductByNameQuery } from \"../../services/productApi\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AddToCart, decrement, increment } from \"../../services/CartSlice\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { AddToFav, deleteFromFav } from \"../../services/FavSlice\";\r\nimport ScrollToTop from \"../../ExternalMethods/ScrollToTop\";\r\nimport BannerSection from \"../Home/HomeSections/bannerSection\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\n\r\n\r\nconst Shop = () => {\r\n    const {cat} = useParams();\r\n\r\n  const { data, error, isLoading } = useGetproductByNameQuery();\r\n  const { SelectedProductsId , SelectedProducts  } = useSelector((state) => state.Cart);\r\n  const { favProductsId   } = useSelector((state) => state.Fav);\r\n  const [checked, setchecked] = useState([cat !== undefined? cat:\"All\"]);\r\n  const [MaxPrice, setMaxPrice] = useState(0);\r\n  const [MinPrice, setMinPrice] = useState(0);\r\n  const [Search, setSearch] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const Navigate = useNavigate();\r\n  const [categoryHeight, setcategoryHeight] = useState(false);\r\n  const [PriceHeight, setPriceHeight] = useState(false);\r\n  const [Showfilter, setShowfilter] = useState(true);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const productsPerPage = 6;\r\n\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setCurrentPage(page);\r\n\r\n  };\r\n \r\n\r\n\r\n//   ________________________________________________________________\r\n  const uniqueProducts = [];\r\n  const categories = [];\r\n\r\n  if (data) {\r\n    // ____________________________________\r\n    // this code is used to get only one product for each category \r\n    // ____________________________________\r\n  // Iterate over each product\r\n  for (const product of data) {\r\n      const category = product.category;\r\n      // Check if the category is already added to the uniqueProducts array\r\n      if (!categories.includes(category)) {\r\n      uniqueProducts.push(product);\r\n      categories.push(category);\r\n      }\r\n  }\r\n  }\r\n//_________________________________________________________________\r\n\r\n// to push and remove categories when we checked \r\nconst handleCheckboxChange = (event) => {\r\n    const category = event.target.value;\r\n    if (event.target.checked) {\r\n      setchecked([...checked, category]);\r\n    } else {\r\n      setchecked(checked.filter((c) => c !== category));\r\n    }\r\n  };\r\n\r\nconst valueFilter = ()=>{\r\n    if (Search === \"\") {\r\n        if (checked.includes(\"All\") || checked.length === 0 ) {\r\n            return  MaxPrice !== 0 ? data.filter((product)=> product.price <= MaxPrice && product.price >= MinPrice ) : data\r\n          } else {            \r\n            return MaxPrice === 0 ?  data.filter((product)=> checked.includes(product.category)) \r\n            : data.filter((product)=> checked.includes(product.category)).filter((product) => product.price <= MaxPrice && product.price >= MinPrice ) \r\n          \r\n          } \r\n    } else {\r\n        return data.filter((product) => product.Name.toUpperCase().startsWith(Search.toUpperCase()))\r\n    }\r\n\r\n      }\r\n\r\n  function ProductQuantity(item) {\r\n      const useritem = SelectedProducts.find((userselect) => {\r\n        return userselect.id === item.id;\r\n      });\r\n      return useritem.quantity;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Helmet>\r\n      <title>Shop</title>\r\n    </Helmet>\r\n    <ScrollToTop/>\r\n    <BannerSection  PageName=\"Shop\" {...{cat}}  />\r\n\r\n    {error && \r\n   <Box  sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n    <Typography variant=\"h6\">Data Not Found</Typography>\r\n    </Box>\r\n   }\r\n\r\n\r\n     {isLoading && \r\n      <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n        \r\n      <CircularProgress />\r\n  </Box>\r\n     \r\n     }\r\n\r\n<Box sx={{ p : \"50px 0\" , width : \"100%\" , display : \"flex\" , justifyContent : \"center\"  , flexDirection : {xs : \"column-reverse\" , md : \"row\"} , alignItems : {xs :\"center\" , md : \"flex-start\"}}}>\r\n\r\n{data && \r\n\r\n<>\r\n    <Box sx={{ display : \"flex\" , flexWrap : \"wrap\" ,justifyContent : \"center\", height : \"fit-content\" ,width : {xs : \"100%\" , md : \"58%\" }}}>\r\n    \r\n    {valueFilter().slice(indexOfFirstProduct, indexOfLastProduct).map((Product)=>\r\n            \r\n            (\r\n            <Box\r\n            key={Product.id}\r\n            className=\"Card\"\r\n            sx={{\r\n                width : {xs:\"180px\" , md: \"210px\"} ,\r\n                height: \"320px\",\r\n                backgroundColor: \"#F3F2EE\",\r\n                borderRadius: \"15px\",\r\n                padding: \"10px\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n                cursor: \"pointer\",\r\n                m : \"10px\"\r\n            }}\r\n    \r\n            >\r\n          \r\n        {favProductsId.includes(Product.id) ?\r\n        (\r\n        <IconButton\r\n            onClick={() => {\r\n            dispatch(deleteFromFav(Product))\r\n            }}\r\n            sx={{ color: \"gray\", position: \"absolute\", right: \"5px\" }}\r\n        >\r\n            <FavoriteIcon />\r\n        </IconButton>   \r\n        ) : (\r\n        <IconButton\r\n                onClick={() => {\r\n            dispatch(AddToFav(Product))\r\n                    }}\r\n                    sx={{ color: \"gray\", position: \"absolute\", right: \"5px\" }}\r\n                    >\r\n                    <FavoriteBorderIcon />\r\n        </IconButton>   \r\n        )\r\n        }\r\n         <Box sx={{ml:\"15px\", mt: \"5px\", display: \"flex\" }}>\r\n                {Product.discount && <del style={{ marginRight: \"7px\",color: \"gray\" }}> ${Product.sale}</del>}\r\n                <Typography>${Product.price}</Typography>\r\n                </Box>\r\n        \r\n            <Box sx={{ width: \"90%\", height: \"55%\" ,mx: \"auto\",}}  \r\n                onClick={() => {\r\n                Navigate(`/prodetails/${Product.id}`)\r\n                }}\r\n    \r\n            >\r\n                <Box sx={{ width: \"90%\", height: \"100%\" ,backgroundColor:\"#fff\", borderRadius:\"15px\", padding:\"10px\",mt:\"10px\",position:\"relative\" }}>\r\n                {Product.discount &&\r\n            <Chip\r\n            label={Math.floor( 100 -  (Product.sale / Product.price) * 100) +\"%\"}\r\n            sx={{\r\n                height: \"20px\",\r\n                borderRadius: \"5px\",\r\n                backgroundColor: \"#AC8C5B\",\r\n                color: \"#FFF\",\r\n                position: \"absolute\",\r\n            }}\r\n            />\r\n    \r\n            }\r\n                    <img\r\n                    style={{ width: \"100%\", height: \"100%\" }}\r\n                    src={Product.imageLink}\r\n                    alt=\"product detailing\"\r\n                    loading='lazy'\r\n                    />\r\n\r\n                </Box>\r\n            </Box>\r\n            <Box sx={{ mt : \"25px\"  ,display:\"flex\", flexDirection : \"column\" , alignItems:\"center\", justifyContent:\"space-evenly\"}}>\r\n                <Typography variant=\"h6\" sx={{fontSize:\"16px\"}}>{Product.Name}</Typography>\r\n                    <Stack spacing={1}>\r\n                    <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={Product.rate}\r\n                        precision={0.5}\r\n                        size=\"small\"\r\n                        readOnly\r\n                    />\r\n                    </Stack>\r\n            </Box>\r\n\r\n\r\n\r\n            <Box>\r\n            {SelectedProductsId.includes(Product.id) ?\r\n(<Box>\r\n  <Box  sx={{ height : \"27%\", display : \"flex\"  , alignItems : \"center\" , justifyContent : \"center\"}}>\r\n <Box sx={{display : \"flex\" , alignItems : \"center\" , width : \"75%\" , justifyContent : \"center\"}}>\r\n       <IconButton \r\n       onClick={() => {\r\n        dispatch(decrement(Product))\r\n       }}\r\n       sx={{bgcolor : \"#FFF\", \r\n    \":hover\" : {\r\n        bgcolor : \"#ac8c5b\"\r\n           }\r\n    \r\n    }} size=\"small\" >\r\n           <RemoveIcon sx={{color : \"#ac8c5b\" , \":hover\" : {\r\n        color : \"#FFF\"\r\n           }}} />\r\n       </IconButton>\r\n       <Typography sx={{mx:\"5px\" , fontWeight : \"bold\"}}>{ProductQuantity(Product)}</Typography>\r\n       <IconButton\r\n\r\n\r\n       onClick={() => {\r\n        dispatch(increment(Product))\r\n       }}\r\n       \r\n       sx={{bgcolor : \"#FFF\" , \":hover\" : {\r\n        bgcolor : \"#ac8c5b\"\r\n           }}} size=\"small\">\r\n           <AddIcon sx={{color : \"#ac8c5b\" , \":hover\" : {\r\n        color : \"#FFF\"\r\n           }}} />\r\n       </IconButton>\r\n  </Box>\r\n  \r\n  </Box>\r\n</Box>\r\n\r\n) : \r\n\r\n(\r\n<Box display=\"flex\">\r\n  <Box sx={{flexGrow : 1 }}/>\r\n    <IconButton\r\n    size=\"small\"\r\n  sx={{ bgcolor: \"#FFF\" ,\r\n  \":hover\": {\r\n    color: \"#ac8c5b\",\r\n    outline: \"1px solid #ac8c5b\",\r\n    bgcolor : \"transparent\" , \r\n  },\r\n  }}\r\n  variant=\"contained\"\r\n  \r\n  onClick={() => {\r\n    dispatch(AddToCart(Product))\r\n  }}\r\n  >\r\n    <AddShoppingCartIcon/>\r\n  </IconButton>\r\n</Box>\r\n)\r\n    \r\n    }\r\n            </Box>\r\n              \r\n            </Box>\r\n                ))}\r\n\r\n\r\n\r\n    {valueFilter().length === 0 && \r\n    <Box sx={{width : \"100%\" , height : \"500px\" , display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}}>\r\n\r\n  <Box sx={{textAlign : \"center\"}}>\r\n          <SentimentVeryDissatisfiedIcon sx={{fontSize : \"50px\" , color : \"gray\" ,  mt :\"10px\"}} />\r\n              <Typography variant=\"h6\" >No Products Found!</Typography>  \r\n              <Typography mb=\"10px\" >Please search or filter in another way to get results</Typography>  \r\n          \r\n  </Box>\r\n    </Box>\r\n    }\r\n\r\n{valueFilter().length > 6  && \r\n\r\n<Box sx={{ width : \"100%\" , m : \"20px 16px\"}}>\r\n<Pagination \r\ncount={Math.ceil(valueFilter().length / productsPerPage)}\r\npage={currentPage}\r\nonChange={handlePageChange}\r\ncolor=\"secondary\" />\r\n</Box>\r\n    \r\n} \r\n</Box> \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Box sx={{width : {xs :\"90%\" , md : \"20%\"} }} >\r\n    \r\n    <Box sx={{ width : \"100%\" ,display: \"flex\", alignItems: \"center\" , position : \"relative\" , my : \"10px\" }}>\r\n                    <input \r\n                    onChange={(e) => {setSearch(e.target.value)}}\r\n                    placeholder=\"Search\" style={{ width : \"calc(100% + 20px)\",padding: \"15px 30px\", border : \"1px solid black\" , borderRadius : \"15px\"}} />\r\n                    <SearchIcon\r\n                    sx={{ color: \"black\", position: \"absolute\", right: \"5px\" }}\r\n                    />\r\n                </Box>\r\n<Box \r\nonClick={() => {setShowfilter(Showfilter ? false : true)}}\r\nsx={{display : {xs : \"flex\" , md : \"none\"} , cursor : \"pointer\" , ml : \"10px\"}}>\r\n<Typography>Filter</Typography>\r\n{Showfilter ? <ExpandLessIcon /> : <ExpandMoreIcon/>}\r\n</Box>\r\n\r\n {Showfilter && \r\n  <>\r\n  \r\n  <Box sx={{border:\"1px solid black\",width : \"100%\" ,\r\n            borderRadius: \"15px\",\r\n            overflow : \"hidden\"\r\n            }}>\r\n\r\n\r\n<Accordion >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          sx={{display:\"flex\", justifyContent:\"space-between\",my:\"10px\", mx:\"25px\"}}\r\n        >\r\n          <Typography >Category</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n       \r\n                <FormGroup sx={{my:\"10px\" }}>\r\n\r\n                <Box sx={{display:\"flex\",alignItems:\"center\", \r\n                    justifyContent:\"space-between\", mx:\"25px\", color:\"gray\"}}>\r\n                        <FormControlLabel control={<Checkbox \r\n                               value={\"All\"}\r\n                               checked={checked.includes(\"All\")}\r\n                               onChange={handleCheckboxChange}\r\n                         size=\"small\" />} label=\"All\"/>\r\n                        <Typography>({data.length})</Typography>\r\n                    </Box>\r\n\r\n                    {categories.map((cate)=> <Box key={cate} sx={{display:\"flex\",alignItems:\"center\", \r\n                            justifyContent:\"space-between\", mx:\"25px\",\r\n                            color:\"gray\"}}>\r\n                        <FormControlLabel control={<Checkbox \r\n                        value={cate}\r\n                        checked={checked.includes(cate)}\r\n                        onChange={handleCheckboxChange}\r\n                        size=\"small\" />} label={cate} \r\n                        onClick={() => {\r\n                           setchecked( checked.filter((x) => x !== \"All\"))\r\n                        //    setPrice(\"\")\r\n                        }}\r\n                        \r\n                        />\r\n                        <Typography >({data.filter((pro) => pro.category === cate ).length})</Typography>\r\n                    </Box>\r\n                     )}\r\n                </FormGroup>\r\n              \r\n        </AccordionDetails>\r\n      </Accordion>\r\n            </Box>   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n    <Box sx={{width : \"100%\" , mt :\"15px\" ,border : \"1px solid black\" , borderRadius : \"15px\"}}>\r\n  \r\n    <Accordion >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          sx={{display:\"flex\", justifyContent:\"space-between\",my:\"10px\", mx:\"25px\"}}\r\n        >\r\n          <Typography >Price Filter</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n       \r\n        <FormControl  sx={{mx : \"25px\"}}>\r\n          <RadioGroup\r\n            aria-labelledby=\"price filter\"\r\n            defaultValue=\"\"\r\n            name=\"price\"\r\n          >\r\n\r\n\r\n        <FormControlLabel value=\"0\" onClick={() => {setMaxPrice(0)  \r\n                        setMinPrice(0)\r\n                }} control={<Radio\r\n                    checked={MaxPrice === 0}\r\n                 />} label=\"All Price\" />\r\n            <FormControlLabel value=\"100\" onClick={() => {setMaxPrice(100)  \r\n                setMinPrice(0)\r\n                 setchecked( checked.filter((x) => x !== \"All\"))\r\n                 }} control={<Radio \r\n                 checked={MaxPrice === 100}\r\n                 />} label=\"0 - $100\" />\r\n            <FormControlLabel value=\"300\" onClick={() => {setMaxPrice(300) \r\n                            setMinPrice(100)\r\n\r\n           }} control={<Radio\r\n                    checked={MaxPrice === 300}\r\n                  />} label=\"$100 - $300\" />\r\n            <FormControlLabel value=\"500\" onClick={() => {setMaxPrice(500)  \r\n                            setMinPrice(300)\r\n             }} control={<Radio\r\n                    checked={MaxPrice === 500}\r\n                 />} label=\"$300 - $500\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n              \r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n    </Box>\r\n  \r\n  \r\n  </>\r\n \r\n }\r\n    \r\n    \r\n    \r\n    </Box>\r\n</>\r\n\r\n}\r\n\r\n</Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Shop;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Checkout\\Check.jsx",["259"],[],"import React, { useState } from 'react';\r\nimport BannerSection from '../Home/HomeSections/bannerSection';\r\nimport ScrollToTop from '../../ExternalMethods/ScrollToTop';\r\nimport { Box, Button, Typography ,TextField} from '@mui/material';\r\nimport PaddingOutlinedIcon from '@mui/icons-material/PaddingOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport WestOutlinedIcon from '@mui/icons-material/WestOutlined';\r\nimport { useSelector } from 'react-redux';\r\nimport FormDialog from './confirm';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Check = () => {\r\n    const Navigate = useNavigate()\r\n\r\n    const [paymentvalue, setpaymentvalue] = useState(\"Cash\");\r\n    const [Country, setCountry] = React.useState('');\r\n    const [Town, setTown] = React.useState('');\r\n     const [firstName, setfirstName] = useState(\"\");\r\n    const [LastName, setLastName] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [address, setaddress] = useState(\"\");\r\n    const [Code, setCode] = useState(\"\");\r\n\r\n\r\n    const { SelectedProducts , disable } = useSelector((state) => state.Cart);\r\n\r\n    let total = 0;\r\n    function TotalPrice(product) {\r\n       let subtotal = 0;\r\n       subtotal = Math.floor(product.quantity * (product.discount? product.sale:product.price))\r\n        total += subtotal\r\n        return subtotal\r\n   }\r\n   \r\n    return (\r\n        <>\r\n         <Helmet>\r\n         <title>Check Out</title>\r\n        </Helmet>\r\n        <ScrollToTop/>\r\n\r\n        <BannerSection PageName=\"CheckOut\"/>\r\n        <Box sx={{width : \"100%\" , minHeight :\"100vh\" , display : \"flex\" ,flexDirection:\"column\",alignItems:\"center\"}}>\r\n            <Box sx={{ my : \"50px\" ,width : {xs : \"90%\" , md : \"75%\"} , height : \"fit-content\"}}>\r\n                <Box sx={{width:\"100%\",display:\"flex\",alignItems:\"center\",bgcolor:\"#E9E7DB\",borderRadius:\"25px\",my:\"15px\",padding:\"12px 0\"}}>\r\n                    <PaddingOutlinedIcon sx={{color:\"#ac8c5b\" , fontSize:\"18px\", m: {xs : \"0 8px 0 5px\" , md : \"0 8px 0 15px\"}}}/>\r\n                    <Typography sx={{ fontSize:\"14px\",mx:\"5px\"}}>Have a Coupon?</Typography>\r\n                    <input className='colorPlaceholder' type=\"text\" placeholder='click here to enter your code' \r\n                    style={{color:\"#ac8c5b\",fontSize:\"14px\", backgroundColor:\"transparent\",border: \"none\",padding:\"5px 0\"}}/>\r\n                </Box>\r\n                <Box sx={{width:\"100%\",display:\"flex\",alignItems:\"center\",bgcolor:\"#E9E7DB\",borderRadius:\"25px\",my:\"15px\",padding:\"15px 0\"}}>\r\n                    <InfoOutlinedIcon sx={{color:\"#ac8c5b\" , fontSize:\"18px\", m:\"0 8px 0 15px\"}}/>\r\n                    <Typography sx={{ fontSize:\"14px\",mx:\"5px\"}}>Returning Customer?</Typography>\r\n                    <Link to=\"/\" >Click here to login</Link>\r\n                </Box>\r\n            </Box>\r\n\r\n{/* ----------------------------------- */}\r\n\r\n    <Box sx={{width : \"100%\" , display : \"flex\" , justifyContent : \"center\"}}>\r\n        <Box sx={{width : {xs : \"90%\" , md : \"75%\"}, display:\"flex\",justifyContent: { xs : \"center\" , md : \"space-between\"},flexWrap : \"wrap\" }}>   \r\n            <Box sx={{width:{xs:\"100%\" ,md:\"50%\"},my:\"30px\" , border:\"1px solid #E9E7DB\", borderRadius:\"15px\"}}>\r\n                <Box sx={{display: \"flex\",flexDirection:\"column\", alignItems:\"start\" , justifyContent: \"center\", m:\"10px\"}}>\r\n                    <Typography variant='h6' sx={{fontWeight:\"bold\",m:\"10px \"}}>Billing Details</Typography>\r\n                    <form style={{width: \"100%\"}}>\r\n                       \r\n                        <Box sx={{width: \"100%\",display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        <TextField required\r\n                        onChange={(e) => {setfirstName(e.target.value)}}\r\n                sx={{width :\"49%\",fontSize:\"10px\", borderRadius : \"30px\" , backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                id=\"first\" label=\"First Name\" type=\"text\" />\r\n\r\n\r\n\r\n                <TextField onChange={(e) => {setLastName(e.target.value)}} required\r\n                sx={{width :\"49%\",fontSize:\"10px\", borderRadius : \"30px\" ,backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                id=\"last\" label=\"Last Name\" type=\"text\" />\r\n                </Box>\r\n            <Box sx={{width: \"100%\",display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <TextField\r\n                onChange={(e) => {setEmail(e.target.value)}}\r\nrequired\r\n                sx={{outline : \"none\" ,width :\"49%\",fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                id=\"Email\" label=\"Email\" type=\"text\" />\r\n\r\n                <TextField required\r\n                        onChange={(e) => {setPhone(e.target.value)}}\r\n                sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                id=\"Phone\" label=\"Phone Number\" type=\"number\" />\r\n                        </Box>\r\n                   <Box sx={{ width : `calc(100% - 20px)` , p : \"10px\"}}>\r\n                      \r\n                         <FormControl required fullWidth sx={{borderRadius : \"30px\", backgroundColor:\"#E9E7DB\"}}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={Country}\r\n          label=\"Country\"\r\n          onChange={(eo) => { setCountry(eo.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"Egypt\">Egypt</MenuItem>\r\n          <MenuItem value=\"Canada\">Canada</MenuItem>\r\n          <MenuItem value=\"Brazil\">Brazil</MenuItem>\r\n          <MenuItem value=\"United State\">United State</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n                   </Box>\r\n                <Box sx={{ width : `calc(100% - 20px)` , p : \"10px\"}} >\r\n                <TextField required onChange={(e) => {setaddress(e.target.value)}}\r\n                sx={{width :\"100%\",fontSize:\"10px\", borderRadius : \"30px\" ,backgroundColor:\"#E9E7DB\",border: \"none\"}}\r\n                id=\"address\" label=\"address\" type=\"text\" />\r\n                </Box>\r\n\r\n\r\n\r\n\r\n                        <Box sx={{width : `calc(100% - 20px)` , p : \"10px\",display: \"flex\", justifyContent: \"space-between\"}}>\r\n                     <Box sx={{width : \"48%\"}}>\r\n\r\n                     <TextField required\r\n                    onChange={(e) => {setCode(e.target.value)}}\r\n\r\n                sx={{width :\"100%\",fontSize:\"10px\" , borderRadius : \"30px\" ,backgroundColor:\"#E9E7DB\",border: \"none\"}}\r\n                id=\"Town\" label=\"Town\" type=\"text\" />\r\n\r\n                     </Box>\r\n                    \r\n                    <Box sx={{width : \"48%\"}}>\r\n                        <TextField required\r\n                    onChange={(e) => {setCode(e.target.value)}}\r\n\r\n                sx={{width :\"100%\",fontSize:\"10px\" , borderRadius : \"30px\" ,backgroundColor:\"#E9E7DB\",border: \"none\"}}\r\n                id=\"postCode/Zip*\" label=\"postCode/Zip\" type=\"text\" />\r\n\r\n                    </Box>\r\n                        \r\n                        \r\n                        </Box>\r\n                        <Box sx={{width: \"100%\",margin:\"10px 0\", height:\"1px\",bgcolor:\"#E9E7DB\"}} />\r\n                        <Box sx={{width: \"100%\",display: \"flex\", justifyContent: \"space-between\"}}>\r\n\r\n                        <Button sx={{color : \"#ac8c5b\"}} onClick={()=>Navigate(\"/cart\")} >\r\n                            <WestOutlinedIcon sx={{ fontSize: \"20px\" , mx:\"5px\" }} />\r\n                            Return to Cart\r\n                        </Button>\r\n\r\n                        <Button\r\n                        onClick={()=>Navigate(\"/shop\")}\r\n                            sx={{\r\n                            fontSize: {xs : \"9px\" , md : \"12px\"},\r\n                            mx: {xs :\"10px\" , md : \"20px\"},\r\n                            backgroundColor: \"#AC8C5B\",\r\n                            fontWeight: \"200\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: {xs : \"10px\" , md : \"10px 40px\"},\r\n                            borderRadius: \"20px\",\r\n                            \":hover\": { color: \"#AC8C5B\", outline: \"1px solid #AC8C5B\" },\r\n                            }}\r\n                        >\r\n                            Continue Shopping\r\n                        </Button>\r\n                        </Box>\r\n                    </form>\r\n                \r\n                </Box>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* _________________________________________________________________ */}\r\n\r\n\r\n\r\n\r\n            <Box sx={{width:{xs:\"100%\" ,md:\"40%\"},my:\"30px\" , border:\"1px solid gray\", borderRadius:\"15px\"}}>\r\n\r\n                <Box sx={{width:\"90%\" ,display: \"flex\",flexDirection:\"column\", alignItems:\"start\" , justifyContent: \"center\", m:\"20px\"}}>\r\n                    <Typography variant='h6' sx={{fontWeight:\"bold\",m:\"10px \"}}>Order Summary</Typography>\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"10px\"}}>Product</Typography>\r\n                        <Typography sx={{m:\"10px\"}}>Total</Typography>\r\n                    </Box>\r\n                    <Box sx={{width: \"100%\", height:\"1px\",bgcolor:\"#E9E7DB\"}} />\r\n\r\n                    {SelectedProducts.map((Product) => (\r\n\r\n    <Box key={Product.id} sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\",color:\"gray\"}}>\r\n    <Box sx={{minWidth:\"40%\",display:\"flex\",justifyContent:\"space-between\"}}>\r\n        <Typography sx={{m:\"0 10px\"}}>{Product.Name}</Typography>\r\n        <Typography sx={{m:\"0 10px\"}}>{Product.quantity}</Typography>\r\n    </Box>\r\n    <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>${TotalPrice(Product)}</Typography>\r\n    </Box>\r\n\r\n                    ))\r\n              \r\n                    \r\n                   }\r\n\r\n\r\n\r\n\r\n\r\n                    <Box sx={{width: \"100%\", height:\"1px\",bgcolor:\"#E9E7DB\"}} />\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"3px 10px\"}}>SubTotal</Typography>\r\n                        <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>${total}</Typography>\r\n                    </Box>\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"3px 10px\"}}>Shipping</Typography>\r\n                        <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>Free Shipping</Typography>\r\n                    </Box>\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"3px 10px\"}}>Tax</Typography>\r\n                        <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>$00</Typography>\r\n                    </Box>\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"3px 10px\"}}>Local Delivery</Typography>\r\n                        <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>$20</Typography>\r\n                    </Box>\r\n\r\n                    {disable  && \r\n             <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                     <Typography sx={{m:\"3px 10px\"}}>Copon Code</Typography>\r\n                     <Typography sx={{color:\"gray\",m:\"3px 10px\"}}>-20%</Typography>\r\n                 </Box>    \r\n            \r\n            }\r\n\r\n                    <Box sx={{width: \"100%\", height:\"1px\",bgcolor:\"#E9E7DB\"}} />\r\n                    <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{m:\"10px\"}}>Total</Typography>\r\n                        <Typography sx={{color:\"#ac8c5b\",fontWeight:\"bold\",m:\"10px\"}}>${disable ? \r\n                        Math.floor(total * 0.8 +20 ) : total +20\r\n                    }</Typography>\r\n                    </Box>\r\n\r\n\r\n                    <FormControl>\r\n      <FormLabel id=\"demo-radio-buttons-group-label\">Payment</FormLabel>\r\n      <RadioGroup\r\n        aria-labelledby=\"demo-radio-buttons-group-label\"\r\n        defaultValue={paymentvalue}\r\n        name=\"radio-buttons-group\"\r\n      >\r\n\r\n        <FormControlLabel onClick={() => {\r\n            setpaymentvalue(\"Cash\")\r\n\r\n        }} value=\"Cash\" control={<Radio />} label=\"Cash on delivery\" />\r\n        <FormControlLabel \r\n        onClick={() => {\r\n            setpaymentvalue(\"Credit\")\r\n        }}\r\n        \r\n        value=\"Credit\" control={<Radio />} label=\"Credit/Visa Cards or Paypal\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n\r\n                        <FormDialog {...{paymentvalue , Code , address ,Phone ,Email , LastName , firstName , Town , Country }} />\r\n                \r\n                \r\n                </Box>\r\n            </Box>\r\n\r\n        </Box>\r\n    </Box>\r\n\r\n\r\n\r\n        </Box>\r\n        </>\r\n    );\r\n    \r\n}\r\n\r\nexport default Check;\r\n\r\n\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Blog\\BlogsSection;.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\section2.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\ExternalMethods\\ScrollToTop.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\CategorySection.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\bannerSection.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Section5.jsx",["260"],[],"import { Box, Button, Typography, useMediaQuery, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useCountdown } from '../../../Hooks/useCountDown';\r\nimport { useGetproductByNameQuery } from \"../../../services/productApi\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport Shape from './Shape';\r\n\r\nconst Section5 = () => {\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const { data, error, isLoading } = useGetproductByNameQuery();\r\n\r\n\r\n  const endOfDay = new Date();\r\nendOfDay.setUTCHours(23, 59, 59, 999);\r\n\r\n  const [ hours, minutes, seconds] = useCountdown(endOfDay);\r\n  const date = [\r\n\r\n      {num : \"25\" , name : \"Days\"} ,\r\n      {num : hours , name : \"hours\"} ,\r\n      {num : minutes , name : \"min\"} ,\r\n      {num : seconds , name : \"sec\"} ,\r\n\r\n  ];\r\n\r\nconst Navigate = useNavigate()\r\n\r\n\r\n\r\n    return (\r\n        <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" , height : \"700px\" }}>\r\n            <Box sx={{ overflow : \"hidden\" ,position : \"relative\"  ,width : {xs : \"90%\" , md : \"75%\"} , height : \"80%\" , borderRadius : \"20px\" ,bgcolor : \"#AC8C5B\" , display : \"flex\" , alignItems : \"center\" , justifyContent : \"center\" , flexDirection : \"column\" }}>\r\n\r\n<Box sx={{position : \"absolute\" , bottom : {xs :\"20px\" , md : \"30px\"} , left : { xs : \"25px\" , md : \"38px\"}}}>\r\n              <Shape/>\r\n  \r\n</Box>\r\n<Box sx={{position : \"absolute\" , top : \"-100px\", right : \"-100px\" ,borderRadius :\"50%\" ,bgcolor : \"#B99D75\" , width : \"350px\" , height : \"350px\" , display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}}>\r\n  <Box sx={{borderRadius :\"50%\" ,bgcolor : \"#AC8C5B\" , width : \"200px\" , height : \"200px\" }} ></Box>\r\n</Box>\r\n\r\n          <Box sx={{zIndex : \"1\" ,paddingBottom : \"20px\" ,width :\"100%\" , display : \"flex\" , flexDirection : {xs : \"column\" , md : \"row\" , alignItems : \"center\" , justifyContent : \"center\"}}}>\r\n          <Typography variant='h5' sx={{  fontWeight : \"500\" ,fontSize : {xs : \"22px\" , md : \"35px\"} ,color : \"#FFF\"}}>Deal of the Week Let's</Typography>\r\n          <Box display=\"flex\">\r\n              <Typography className=\"outline-Text\" variant='h5' sx={{mx : \"5px\" , fontSize : {xs : \"22px\" , md : \"35px\"}}} >Shopping</Typography>\r\n              <Typography variant='h5' sx={{ fontWeight : \"500\" ,fontSize : {xs : \"22px\" , md : \"35px\", color : \"#FFF\"}}} >Today</Typography>\r\n          </Box>\r\n\r\n\r\n\r\n          </Box>\r\n  {error && \r\n   <Box  sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n    <Typography variant=\"h6\">Data Not Found</Typography>\r\n    </Box>\r\n   }\r\n\r\n\r\n     {isLoading && \r\n      <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,width : \"100%\" , height : \"100%\"}}>\r\n      <CircularProgress />\r\n  </Box>\r\n     \r\n     }\r\n\r\n{data &&\r\n     <Box style={{ width : \"95%\" , height : {xs : \"80%%\" , md : \"80%\"} }}>\r\n      <Carousel autoPlay={true} interval={3000} infiniteLoop={true} showThumbs={false}>\r\n      {data.filter((product)=> product.discount === true).slice(12 , 18).map((Product) => (\r\n\r\n      <Box key={Product.id} sx={{ mx : \"auto\" ,width : {xs : \"80%\" , md : \"90%\"} , height : \"380px\", borderRadius : \"20px\" ,bgcolor : \"#FFF\" , display : \"flex\" , flexDirection : {xs : \"column\" , md : \" row\"} , alignItems : \"center\" ,justifyContent : \"center\"}} >\r\n\r\n      <Box sx={{width : {xs : \"100%\" , md : \"50%\"} , height : {xs : \"50%\" , md : \"100%\"} , display : \"flex\" , alignItems : \"center\" , justifyContent : \"center\"}} >\r\n      <Box sx={{width : {xs : \"150px\" , md : \"250px\"}}}>\r\n              <img style={{width : \"100%\" , height : \"100%\"}} src={Product.imageLink} loading='lazy' alt=\"product photo1\" />\r\n      </Box>                \r\n      </Box>\r\n\r\n      <Box sx={{ p : \"0 20px\" ,width : {xs : \"100%\" , md : \"50%\"} , height : {xs : \"50%\" , md : \"100%\"} , display : \"flex\" , flexDirection : \"column\" ,justifyContent : \"center\" }} >\r\n\r\n                  <Box>\r\n<Box sx={{display : \"flex\" }}>\r\n                    <Typography variant='h5' sx={{fontSize : {xs : \"15px\" , md : \"30px\"}}}>{Product.Name}</Typography>\r\n  \r\n</Box>\r\n                  <Box sx={{display : \" flex\" , flexDirection : {xs : \"row\" , md : \"column\"} , alignItems : \"baseline\" ,width : \"auto\" }}>\r\n                      <Box sx={{ m: \"10px 0px\", display: \"flex\" }}>\r\n                      {Product.discount &&<del style={{ color:\"gray\", marginRight: \"7px\" , fontWeight : \"700\" }}> ${Product.price}</del>}\r\n                      <Typography sx={{fontWeight : \"700\"}}>${Product.sale}</Typography>\r\n                      </Box>\r\n\r\n                      <Button\r\n              sx={{\r\n                  width : {xs : \"auto\" , md :\"100px\"} ,\r\n                  height : \"25px\" ,\r\n                bgcolor: \"#ac8c5b\",\r\n                cursor: \"pointer\",\r\n                color: \"#FFF\",\r\n                p: {xs : \"0\" , md : \"5px 0px\"},\r\n                fontSize : \"10px\" ,\r\n                borderRadius: \"20px\",\r\n                \":hover\": {\r\n                  color: \"#FCC012\",\r\n                  outline: \"1px solid #FCC012\",\r\n                },\r\n                mx : {xs : \"10px\" , md : \"0\"}\r\n\r\n              }}\r\n              onClick={() => {\r\n                Navigate(`/prodetails/${Product.id}`);\r\n              }}\r\n            >\r\n              Shop Now\r\n            </Button>\r\n                  </Box>\r\n\r\n\r\n<Box sx={{width : \"100&\" , height : \"50px\" , display : \"flex\" , flexDirection : \"column\", alignItems : \"center\" , justifyContent : \"center\"}}>\r\n\r\n<Box sx={{width : \"100%\" , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n<Typography>Available : {Product.count}</Typography>\r\n<Typography>Already Sold : {Product.sold}</Typography>\r\n</Box>\r\n\r\n<Box sx={{width : \"90%\" , height : \"15px\" , bgcolor : \"#E9E7DB\" , borderRadius : \"20px\"}}>\r\n<Box sx={{width : `${Math.floor( 100 -  (Product.count / (Product.count + Product.sold)) * 100)}%` , height:\"100%\" , bgcolor : \"#FCC012\" , borderRadius : \"20px\"  }}></Box>\r\n</Box>\r\n\r\n\r\n</Box>\r\n\r\n\r\n              </Box>\r\n\r\n              <Box>\r\n\r\n\r\n\r\n          <Box sx={{ m : \"15px 0\" , display : \"flex\"}} >\r\n          <Box sx={{display :\" flex\" , alignItems : \"center\"}}>\r\n              <Typography variant='h6' sx={{fontSize : { xs : \"10px\" , md : \"14px\"}}} >Hurry Up :\r\n              <br/>\r\n              <Typography variant='p' sx={{fontSize : \"7px\"}}>Offer end in</Typography>\r\n              </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{display : \"flex\" , justifyContent : \"space-around\" , flexGrow : 1 }}>\r\n\r\n\r\n          {date.map((date) => (\r\n          <Box key={date.name} sx={{borderRadius : \"50%\" , width : {xs : \"45px\" , md : \"55px\"} , height : {xs : \"45px\" , md :\"55px\"} , p : \"10px\"  ,bgcolor : \"#E9E7DB\" , display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" , flexDirection : \"column\"}}>\r\n          <Typography fontSize=\"12px\" variant='h6' >{date.num}</Typography>\r\n              <Typography  variant='h6' sx={{fontSize : \"10px\"}} >{date.name}</Typography>\r\n          </Box>\r\n          ) )}\r\n\r\n\r\n          </Box>\r\n\r\n          </Box>\r\n\r\n                        </Box>\r\n\r\n\r\n\r\n\r\n                 </Box>\r\n\r\n\r\n\r\n      </Box>\r\n\r\n      ))}\r\n      </Carousel>\r\n\r\n      </Box>\r\n}\r\n    </Box>\r\n\r\n\r\n\r\n</Box>\r\n        );\r\n}\r\n\r\nexport default Section5;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\AllProductsSection.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\section1.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Productsection.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\SwiperSection.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\Section2.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\Section1.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\section4.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\About\\AboutSections\\brands.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Footer\\Subscribe.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Checkout\\confirm.jsx",["261"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport { Box, DialogTitle, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\n\r\nexport default function FormDialog({paymentvalue }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('');\r\nconst [maxLength, setmaxLength] = useState(16);\r\nconst [paymentmethod, setpaymentmethod] = useState(\"\");\r\n\r\nconst Years =[\r\n  {year : \"2023\"} , \r\n  {year : \"2024\"} , \r\n  {year : \"2025\"} , \r\n  {year : \"2026\"} , \r\n  {year : \"2027\"} , \r\n  {year : \"2028\"} , \r\n  {year : \"2029\"} , \r\n  {year : \"2030\"} , \r\n  {year : \"2031\"} , \r\n  {year : \"2032\"} , \r\n  {year : \"2033\"} , \r\n]\r\n\r\nconst Month =[\r\n  {month : \"1\"} ,  \r\n  {month : \"2\"} ,\r\n  {month : \"3\"} ,\r\n  {month : \"4\"} ,\r\n  {month : \"5\"} ,\r\n  {month : \"6\"} ,\r\n  {month : \"7\"} ,\r\n  {month : \"8\"} ,\r\n  {month : \"9\"} ,\r\n  {month : \"10\"} ,\r\n  {month : \"11\"} ,\r\n  {month : \"12\"} ,\r\n\r\n  \r\n]\r\n\r\n\r\n\r\n\r\n\r\n// to add max width to the input\r\n  const handleChange = (e) => {\r\n    let inputValue = e.target.value;\r\n    \r\n    // Check if the input exceeds the maximum length\r\n    if (inputValue.length <= maxLength) {\r\n      setValue(inputValue);\r\n    } else {\r\n      // Truncate the input value to the maximum length\r\n      const truncatedValue = inputValue.slice(0, maxLength);\r\n      setValue(truncatedValue);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button \r\n         sx={{\r\n            fontSize: \"12px\",\r\n            mx: \"10px\",\r\n            backgroundColor: \"#AC8C5B\",\r\n            fontWeight: \"200\",\r\n            cursor: \"pointer\",\r\n            color: \"#FFF\",\r\n            padding: \"5px 20px\",\r\n            borderRadius: \"20px\",\r\n            \":hover\": { color: \"#AC8C5B\", outline: \"1px solid #AC8C5B\" },\r\n            }}\r\n      \r\n      \r\n      variant=\"outlined\" onClick={handleClickOpen}>\r\n      Place Order Now\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{width : {xs : \"fit-content\" , md:\"500px\"}}} >Confirm Order Payment</DialogTitle>\r\n        <DialogContent>\r\n       \r\n\r\n  {paymentvalue === \"Cash\" &&\r\n\r\n<>\r\n\r\n\r\n<Typography fontWeight=\"500\"> Do You Want To Cash on Delivery ? </Typography>\r\n<Typography fontWeight=\"500\"> Please note that we will add an additional $12 to active this service</Typography>\r\n\r\n\r\n</>\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n{ paymentvalue === \"Credit\" && \r\n<>   \r\n<FormControl>\r\n      <FormLabel id=\"demo-row-radio-buttons-group-label\">Please Choose The Payment Method :</FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"payment\"\r\n        name=\"payment\"\r\n        defaultValue={paymentmethod}\r\n      >\r\n        <FormControlLabel \r\n        onClick={() => {setpaymentmethod(\"Credit\")}}\r\n        value=\"Credit\" control={<Radio />} label=\"Credit\" />\r\n        <FormControlLabel \r\n        onClick={() => {setpaymentmethod(\"Visa\")}}\r\n        value=\"Visa\" control={<Radio />} label=\"Visa\" />\r\n        <FormControlLabel\r\n        onClick={() => {setpaymentmethod(\"Paypal\")}}\r\n        value=\"Paypal\" control={<Radio />} label=\"Paypal\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n\r\n\r\n{paymentmethod === \"Credit\" &&\r\n             <> \r\n            <Box display=\"flex\" alignItems=\"center\">\r\n               <Typography>Please Enter Your Credit Card Details</Typography>\r\n                <img style={{width : \"40px\" , margin : \"0 10px\"}} loading='lazy' src=\"../../../Imgs/master card.png\"  alt=\"card\"/>\r\n              \r\n              \r\n            </Box>\r\n\r\n             <TextField\r\n               autoFocus\r\n               margin=\"dense\"\r\n               id=\"name\"\r\n               label=\"\"\r\n               placeholder='Card Name'\r\n               type=\"text\"\r\n               fullWidth\r\n               variant=\"standard\"\r\n             />\r\n           <TextField\r\n               value={value}\r\n               onChange={handleChange}\r\n               autoFocus\r\n               margin=\"dense\"\r\n               id=\"name\"\r\n               label=\"\"\r\n               placeholder='xxxx-xxxx-xxxx-xxxx'\r\n               type=\"number\"\r\n               fullWidth\r\n               variant=\"standard\"\r\n             />\r\n\r\n\r\n             <Box display=\"flex\" width=\"100%\">\r\n             <select name=\"Month\" placeholder='Month*'\r\n                        style={{width :\"50%\",fontSize:\"10px\",margin:\"10px\",border: \"none\",padding:\"15px\"}}>\r\n                                 {Month.map((month)=>(\r\n                        <option key={month.month} value={month.month}>{month.month}</option>\r\n                        ))}\r\n                        </select>\r\n\r\n             <select name=\"Year\" placeholder='Year*'\r\n                        style={{width :\"50%\",fontSize:\"10px\",margin:\"10px\",border: \"none\",padding:\"15px\"}}>\r\n                        {Years.map((year)=>(\r\n                        <option key={year.year} value={year.year}>{year.year}</option>\r\n                        ))}\r\n                        </select>\r\n\r\n                 \r\n             </Box>\r\n             </>\r\n          }\r\n\r\n\r\n\r\n{paymentmethod === \"Visa\" &&\r\n       <> \r\n       <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography>Please Enter Your Visa Card Details</Typography>\r\n           <img style={{width : \"40px\" , margin : \"0 10px\"}} loading='lazy' src=\"../../../Imgs/visa.png\"  alt=\"visa\"/>\r\n         \r\n         \r\n       </Box>\r\n\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"\"\r\n          placeholder='Card Name'\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n        />\r\n      <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"\"\r\n          placeholder='xxxx-xxxx-xxxx-xxxx'\r\n          type=\"number\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n        />\r\n\r\n\r\n        <Box display=\"flex\" width=\"100%\">\r\n        <select name=\"Month\" placeholder='Month*'\r\n                   style={{width :\"50%\",fontSize:\"10px\",margin:\"10px\",border: \"none\",padding:\"15px\"}}>\r\n                            {Month.map((month)=>(\r\n                   <option key={month.month} value={month.month}>{month.month}</option>\r\n                   ))}\r\n                   </select>\r\n\r\n        <select name=\"Year\" placeholder='Year*'\r\n                   style={{width :\"50%\",fontSize:\"10px\",margin:\"10px\",border: \"none\",padding:\"15px\"}}>\r\n                   {Years.map((year)=>(\r\n                   <option key={year.year} value={year.year}>{year.year}</option>\r\n                   ))}\r\n                   </select>\r\n\r\n            \r\n        </Box>\r\n        </>\r\n          }\r\n\r\n\r\n\r\n          \r\n{paymentmethod === \"Paypal\" &&\r\n       \r\n       <> \r\n              <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography>Please Enter Your Paypal account</Typography>\r\n           <img style={{width : \"40px\" , margin : \"0 10px\"}} src=\"../../../Imgs/paypal.png\" loading='lazy' alt=\"paypal\"/>\r\n         \r\n         \r\n       </Box>\r\n     <TextField\r\n         autoFocus\r\n         margin=\"dense\"\r\n         id=\"name\"\r\n         label=\"Paypal account\"\r\n         type=\"email\"\r\n         fullWidth\r\n         variant=\"standard\"\r\n       \r\n       />\r\n       </>\r\n\r\n             }\r\n\r\n</>\r\n}\r\n\r\n\r\n\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Confirm</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\ExternalMethods\\matchDownMd.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Home\\HomeSections\\Shape.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\Hooks\\useCountDown.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Global Section\\CommentSec.jsx",["262"],[],"import { Avatar, Box, Button, IconButton, TextField, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nconst Commentsec = ({data , CommentSecWidth , CommentSecName}) => {\r\n    const [comment, setcomment] = React.useState(\"\");\r\n    const [Name, setName] = React.useState(\"\");\r\n    const [Email, setEmail] = React.useState(\"\");\r\n    const [itemId, setitemId] = useState([]);\r\n    const [TheComment, setTheComment] = useState(sessionStorage.getItem(CommentSecName) ? JSON.parse(sessionStorage.getItem(CommentSecName)) : [] );\r\nconst [removeIcon, setremoveIcon] = useState(false);\r\nconst [error, setError] = useState(false)\r\n  \r\n\r\n\r\nlet decodedToken;\r\nconst token = localStorage.getItem('token')\r\n\r\nif (token) {\r\n  decodedToken = jwtDecode(token);\r\n}\r\n\r\n\r\n    const commentDetails  = {\r\n      UniqeId : Math.floor(Math.random() * 1000) , \r\n        Id : data.id ,\r\n        Name : decodedToken ? decodedToken.firstName : Name ,\r\n        Email : decodedToken ? decodedToken.Email : Email , \r\n        date : new Date().toLocaleDateString(),\r\n        Comment : comment , \r\n    }\r\n\r\n\r\n    return (\r\n        <Box sx={{m : \"20px 0\"}}>\r\n    <Box sx={{ border : \"1px solid black\", mx: \"auto\" ,p : \"15px\" ,borderRadius : \"15px\"  , width : {xs : \"85%\" , md : `${CommentSecWidth}%`} , mb:\"20px\" }}>\r\n    \r\n        <Typography variant='h6' sx={{mx : \"auto\" , width : \"95%\" , fontSize: \"18px\" ,fontWeight : \"700\"}}>Comments</Typography>\r\n        {/* {map} */}\r\n        {data.comments.map((comment , index) => (\r\n            <Box key={index} sx={{ width:\"95%\", my : \"10px\",mx:\"auto\",bgcolor:\"#F3F2EE\",borderRadius : \"15px\",display:\"flex\" }}>\r\n            <Avatar sx={{m: \"20px\",  width: 56, height: 56 }} alt={comment.Name} src=\"/broken-image.jpg\" />\r\n            <Box  sx={{flexGrow : 1}}>\r\n                <Typography sx={{mt: \"20px\",fontWeight:\"800\"}}>{comment.Name}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"10px\"}}>{comment.date}</Typography>\r\n                <Typography  sx={{color: \"gray\", fontSize:\"14px\"  , mb : \"20px\", width : \"100%\"}}>{comment.Comment}</Typography>\r\n            </Box>\r\n        </Box>\r\n        ))}\r\n\r\n          {TheComment.filter((comment) => comment.Id === data.id ).map((comment , index) => (\r\n            <Box key={comment.UniqeId} sx={{ width:\"95%\", my : \"10px\",mx:\"auto\",bgcolor:\"#F3F2EE\", minheight : \"300px\",borderRadius : \"15px\",display:\"flex\" }}>\r\n            <Avatar sx={{m: \"20px\",  width: 56, height: 56 }} alt={comment.Name} src=\"/broken-image.jpg\" />\r\n            <Box\r\n            sx={{flexGrow : 1 }} >\r\n                <Typography sx={{mt: \"20px\", fontWeight:\"800\"}}>{comment.Name}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"10px\"}}>{comment.date}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"14px\"  , mb : \"20px\", width : \"100%\"}}>{comment.Comment}</Typography>\r\n            </Box>\r\n\r\n            \r\n\r\n        <IconButton  \r\n    onMouseEnter={() => {\r\n      if (!itemId.includes(comment.UniqeId)) {\r\n        setitemId([...itemId , comment.UniqeId ])\r\n      }\r\n     setremoveIcon(true)\r\n   }}\r\n   onMouseLeave={() => {\r\n    setitemId([])\r\n     setremoveIcon(false)\r\n   }}\r\n   onClick={()=> {\r\n    const NewTheComment = TheComment.filter((item) => {\r\n      return item.UniqeId !== comment.UniqeId;\r\n    });\r\n    const NewItemid = itemId.filter((item) => {\r\n        return item.UniqeId !== comment.UniqeId ;})\r\n\r\n      setitemId(NewItemid)\r\n      setTheComment(NewTheComment)\r\n\r\n      sessionStorage.setItem(CommentSecName , JSON.stringify(NewTheComment) )\r\n\r\n\r\n   }}\r\n\r\n       sx={{mr : \"20px\"}}>\r\n    {itemId.includes(comment.UniqeId) ?   < DeleteIcon sx={{color : \"red\"}}/> : < DeleteOutlineIcon sx={{color : \"gray\"}}/> }\r\n       </IconButton>\r\n        </Box>\r\n         ))}\r\n\r\n    </Box>\r\n\r\n\r\n\r\n\r\n    <Box sx={{ border : \"1px solid black\", mx: \"auto\" ,p : \"15px\" ,borderRadius : \"15px\"  , width : {xs : \"85%\" , md : `${CommentSecWidth}%`} }}>\r\n    \r\n    <Typography variant='h5' sx={{mx : \"auto\" , width : \"95%\" , fontSize: \"18px\" ,fontWeight : \"700\"}}>Write your Comment</Typography>\r\n          {error && <Typography sx={{color:\"red\",fontSize:\"12px\",textAlign:\"center\"}}>Please ,Fill all the Form inputs</Typography>}\r\n    <Box sx={{width:\"95%\",mx:\"auto\",borderRadius : \"15px\",display:\"flex\" }}>\r\n       <form style={{width:\"100%\"}}>\r\n          {decodedToken ? (\r\n              <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n                         <TextField \r\n                         disabled\r\n                    value={decodedToken.firstName}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Name\" />\r\n                      <TextField \r\n                      disabled\r\n                    value={decodedToken.Email}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Email\" />\r\n              </Box>\r\n          ) : (\r\n            <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n            <TextField required\r\n                    value={Name}\r\n                    onChange={(e) => {setName(e.target.value)}}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Name\" />\r\n            <TextField required\r\n                    value={Email}\r\n                    onChange={(e) => {setEmail(e.target.value)}}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Email\" />\r\n        </Box>\r\n          )}\r\n        <TextField required\r\n        value={comment}\r\n        onChange={(e) => {setcomment(e.target.value)}}\r\n               sx={{width :\"97%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                size=\"small\"\r\n                multiline\r\n                rows={4}\r\n                label=\"your comment\" />\r\n\r\n\r\n        <Button       \r\n\r\n        onClick={() => {\r\n            if (decodedToken) {\r\n          if (comment !== \"\") {\r\n            setTheComment([...TheComment , commentDetails])\r\n            if (TheComment !== []) {\r\n            sessionStorage.setItem(CommentSecName , JSON.stringify([...TheComment , commentDetails]) )}\r\n          \r\n          }\r\n            \r\n            } else {\r\n              if (Name !== \"\" && Email !== \"\" && Email.includes(\"@\") && comment !== \"\") {\r\n                setTheComment([...TheComment , commentDetails])\r\n                if (TheComment !== []) {\r\n                sessionStorage.setItem(CommentSecName , JSON.stringify([...TheComment , commentDetails]) )}\r\n                console.log(commentDetails);\r\n                setEmail(\"\")\r\n                setName(\"\")\r\n                setcomment(\"\")\r\n                setError(false)\r\n               } else {\r\n                setError(true)\r\n               }\r\n            }\r\n          }}\r\n            sx={{\r\n              my : \"10px\" ,\r\n              backgroundColor: \"#92764E\",\r\n              cursor: \"pointer\",\r\n              color: \"#FFF\",\r\n              padding: \"5px 16px\",\r\n              borderRadius: \"20px\",\r\n              width : \"fit-content\",\r\n              \":hover\": {\r\n                color: \"#92764E\",\r\n                outline: \"1px solid #92764E\",\r\n              },\r\n            }}\r\n           \r\n              >\r\n               Submit Comment\r\n              </Button>\r\n\r\n\r\n       </form>\r\n    </Box>\r\n\r\n</Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default Commentsec;\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Shop Details\\Rate.jsx",["263"],[],"import * as React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Box, Rating, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\n\r\n\r\n\r\n\r\nexport default function FormDialog({data , setreview , setReviewid , Reviewid}) {\r\n\r\n\r\nconst [open, setOpen] = useState(false);\r\nconst [value, setValue] = React.useState(0);\r\nconst [inView, setinView] = useState(true);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setinView(true)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n             <Typography onClick={() => {\r\n                handleClickOpen()\r\n                \r\n                setValue(0);\r\n\r\n                }}>\r\n                Rate Now\r\n             </Typography>\r\n\r\n                \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n\r\n\r\n{inView ? (\r\n    <Box sx={{width : {xs : \"280px\" , md : \"400px\"}  , p:\"15px 0\" , display : \"flex\" , alignItems : \"center\" , justifyContent : \"center\" , flexDirection : \"column\"}}>\r\n    <Typography variant='h6' mt=\"10px\" >Do You Like This Product ? </Typography>\r\n    <Typography mb=\"10px\">Tap a star to rate it</Typography>\r\n    <Rating \r\n    size=\"large\"\r\n    sx={{fontSize : \"40px\"}}\r\n    name=\"simple-controlled\"\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n        console.log(Reviewid);\r\n        // setOpen(false)\r\n      }}\r\n    />\r\n    <Box sx={{borderTop : \"1px solid black\" , width : \"95%\" , mt : \"25px\" , height : \"60px\" , display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}} >\r\n    <Box sx={{width : \"fit-Content\" , display : \"flex\"}}>\r\n        <Typography variant='h6' sx={{cursor : \"pointer\" , color : \"gray\" , mr:\"15px\"}}\r\n        onClick={()=>{\r\n            setOpen(false)\r\n        }}\r\n        >Not Now</Typography>\r\n        <Typography variant='h6' sx={{cursor : \"pointer\" , color : \"gray\", ml:\"15px\"}}\r\n        onClick={()=>{\r\n            if (!Reviewid.includes(data.reviews)) {\r\n                setReviewid([...Reviewid , data.reviews])\r\n                 setreview(data.reviews +1)\r\n            }\r\n            if (value !== 0) {\r\n                setinView(false)\r\n                setTimeout(handleClose , 3000)\r\n            }\r\n        }}\r\n        >Rate</Typography>\r\n    </Box>\r\n    </Box>\r\n    </Box>\r\n) : (\r\n\r\n\r\n<Box sx={{width : {xs : \"280px\" , md : \"400px\"} , p : \"20px 0\" ,display : \"flex\" , alignItems : \"center\" , justifyContent : \"center\" , flexDirection : \"column\"}} >\r\n<CheckCircleOutlineIcon sx={{fontSize : \"60px\" , color : \"yellow\"}}/>\r\n<Typography sx={{textAlign : \"center\"}}>Thank You For Your Review Of This Product  </Typography>\r\n</Box>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\Profile.jsx",["264","265","266"],[],"import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    TextField,\r\n    Typography,\r\n  } from \"@mui/material\";\r\n  import React, { useState } from \"react\";\r\n  import ScrollToTop from \"../../ExternalMethods/ScrollToTop\";\r\n  import { Helmet } from \"react-helmet\";\r\n  import SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BannerSection from \"../Home/HomeSections/bannerSection\";\r\nimport { useUpdateInfoMutation } from \"../../services/SignApi\";\r\nimport FormDialog from \"./Updateprofile\";\r\nimport Updatepass from \"./updatepass\";\r\n\r\n  \r\n  const Profile = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    let User;\r\n    const token = localStorage.getItem('token')\r\n  \r\n    if (token) {\r\n      User = jwtDecode(token);\r\n    }\r\n\r\n    const [Country, setCountry] = React.useState('');\r\n    const [Town, setTown] = React.useState('');\r\n     const [firstName, setName] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [address, setaddress] = useState(\"\");\r\n    const [UserName, setUserName] = useState(User.UserName);\r\n\r\n\r\n\r\n    return (\r\n      <Box sx={{bgcolor : \"#F3F2EE\" }}>\r\n        <Helmet>\r\n          <title>Profile</title>\r\n        </Helmet>\r\n        <ScrollToTop />\r\n  \r\n        {/* <BannerSection  PageName=\"Profile\" /> */}\r\n\r\n  \r\n      <Box sx={{width : {xs : \"90%\" , md  :\"75%\"}, p : \"20px 0\" , mx : \"auto\" , minHeight : \"100vh\" , display : \"flex\" , justifyContent : \"space-between\" , alignItems : {xs : \"center\" , md : \"start\"} ,flexDirection : {xs : \"column\" , md : \"row\"}}}>\r\n  \r\n      <Box sx={{width : {xs : \"100%\" , md : \"49%\"} , minHeight : \"fit-content\" , p : \"20px 0\" , bgcolor : \"#FFF\" , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n<Box sx={{width : \"90%\"}}>\r\n          <Typography variant=\"h6\">Profile Setting</Typography>\r\n    \r\n</Box>   \r\n     <Box sx={{borderTop : \"1px solid gray\" , width : \"90%\" , mt : \"10px\"}}/>\r\n\r\n    <Box sx={{width : \"90%\" }}>\r\n    <Typography variant=\"h6\" >Information</Typography>\r\n\r\n<Box sx={{display : \"flex\"}}>\r\n            <Box sx={{width : \"25%\"}}>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>User Name</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Email</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Name</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Phone</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Country</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Town</Typography>\r\n            <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\"}}>Address</Typography>\r\n            </Box>\r\n        \r\n            <Box sx={{width : \"75%\"}}>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setUserName(e.target.value)\r\n                console.log(UserName);\r\n                }}\r\n                defaultValue={UserName}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"UserName\"  type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setEmail(e.target.value)}}\r\n                defaultValue={User.Email}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Email\" type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setName(e.target.value)}}\r\n                defaultValue={User.firstName}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Name\" type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setPhone(e.target.value)}}\r\n                defaultValue={User.Phone}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Phone\" type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setCountry(e.target.value)}}\r\n                defaultValue={User.Country}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Country\" type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setTown(e.target.value)}}\r\n                defaultValue={User.Town}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Town\" type=\"text\" />\r\n            </Box>\r\n            <Box sx={{ display : \"flex\" , justifyContent : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n            <TextField\r\n                onChange={(e) => {setaddress(e.target.value)}}\r\n                defaultValue={User.address}\r\n                sx={{outline : \"none\"  ,width : \"90%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                id=\"Address\" type=\"text\" />\r\n            </Box>\r\n            </Box>\r\n</Box >\r\n\r\n<FormDialog  {...{setEmail , UserName , Email , firstName , Phone , Country , Town , address}}  />\r\n\r\n<Box sx={{borderTop : \"1px solid gray\" , width : \"90%\" , mt : \"10px\"}}/>\r\n\r\n     <Box sx={{ width : \"100%\"}}>\r\n        <Typography variant=\"h6\" mt=\"10px\" >Privacy setting</Typography>\r\n           <Box sx={{display : \"flex\"}} >\r\n           <Typography sx={{ display : \"flex\" , alignItems : \"center\" ,height : \"45px\" , m : \"15px 0\" , width : \"25%\"}}>Password</Typography>\r\n        \r\n           <Updatepass {...{setEmail , Email  }}/>\r\n     </Box>\r\n\r\n        </Box>\r\n</Box >\r\n\r\n      </Box>\r\n\r\n\r\n\r\n\r\n      <Box sx={{width : {xs : \"100%\" , md : \"49%\"} , mt : {xs : \"20px\" , md : \"0\"} , height : \"fit-content\" , bgcolor : \"#FFF\"  ,p : \"20px 0\"}}>\r\n      <Box sx={{width : \"90%\" , p : \"0 20px\"}}>\r\n          <Typography variant=\"h6\">My Orders</Typography>\r\n    \r\n</Box>   \r\n        <Box sx={{borderTop : \"1px solid gray\" , width : \"90%\" , mt : \"10px\"}}/>\r\n<Box sx={{display : \"flex\" , flexDirection : \"column\" , justifyContent : \"center\" , minHeight : \"45vh\"}}>\r\n            <Box sx={{textAlign : \"center\"}}>\r\n              <SentimentVeryDissatisfiedIcon sx={{fontSize : \"70px\" , color : \"gray\" ,  mt :\"10px\"}} />\r\n                  <Typography variant=\"h6\" >You don't have any orders right Now </Typography>  \r\n                  <Button\r\n                      onClick={() => {\r\n                        navigate(\"/shop\")\r\n                      }}\r\n                           sx={{\r\n                            my : \"10px\" ,\r\n                            backgroundColor: \"#92764E\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: \"5px 16px\",\r\n                            borderRadius: \"20px\",\r\n                            width : {xs : \"60%\" , md : \"fit-content\" },\r\n                            \":hover\": {\r\n                              color: \"#92764E\",\r\n                              outline: \"1px solid #92764E\",\r\n                            },\r\n                          }}\r\n                      >Order Now</Button>\r\n            </Box>\r\n</Box >\r\n      </Box>\r\n  \r\n  \r\n      </Box>\r\n  \r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  export default Profile;\r\n  \r\n  \r\n  \r\n  \r\n","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\Updateprofile.jsx",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Profile\\updatepass.jsx",["290","291","292","293"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Box,FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { toast } from 'react-toastify';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { useUpdatepassMutation } from '../../services/SignApi';\r\n\r\n\r\n\r\nexport default function Updatepass({setEmail , Email  }) {\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [Message, setMessage] = useState(\"\");\r\n\r\n\r\n\r\nconst [Reset, setReset] = useState(true);\r\n\r\n    const [ Updatepass, { isLoading : updateLoading } ] = useUpdatepassMutation();\r\n\r\n\r\n\r\n    const handleUpdatepass = async () => {\r\n        const result = await Updatepass({ Email , Password });\r\n        if (result.error) {\r\n          console.log('update failed:', result.error);\r\n        } else {\r\n            setOpen(false)\r\n            toast.success(`password updated successfully` , {position: \"top-center\"});\r\n          console.log('update successful:', result.data);\r\n        }};\r\n\r\n\r\n            const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n          \r\n            const handleMouseDownPassword = (event) => {\r\n              event.preventDefault();\r\n            };\r\n        \r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n                \r\n            <Box \r\n            onClick={() => \r\n              {handleClickOpen()\r\n              setReset(true)\r\n              }}\r\n            sx={{width : \"75%\" ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" ,height : \"45px\" ,m : \"15px 0\"}}>\r\n           <Typography sx={{cursor : \"pointer\" , color : \"blue\" , textDecoration : \"underline\" }}>Change Password</Typography>\r\n           </Box>\r\n\r\n                \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n\r\n\r\n{Reset ? (\r\n        <Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n\r\n        <Typography>Please Enter Your current Email</Typography>\r\n              <TextField\r\n                        onChange={(e) => {setEmail(e.target.value)}}\r\n                        sx={{outline : \"none\"  ,width : \"80%\",fontSize:\"10px\", borderRadius : \"30px\" , border: \"none\"}}\r\n                        id=\"Email\" label=\"Enter Your Current Email\" type=\"text\" />\r\n        \r\n        <Button \r\n                        onClick={() => {\r\n                          if (Email !== \"\") {\r\n                            setReset(false)\r\n                          }\r\n\r\n                        }}\r\n                            sx={{\r\n                                my : \"10px\" ,\r\n                                backgroundColor: \"#92764E\",\r\n                                cursor: \"pointer\",\r\n                                color: \"#FFF\",\r\n                                padding: \"5px 16px\",\r\n                                borderRadius: \"20px\",\r\n                                width : {xs : \"60%\" , md : \"fit-content\" },\r\n                                \":hover\": {\r\n                                  color: \"#92764E\",\r\n                                  outline: \"1px solid #92764E\",\r\n                                },\r\n                              }}>Confirm</Button>\r\n        \r\n        </Box>\r\n) : (\r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }} >\r\n<Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Change Password</Typography>\r\n\r\n<Typography>{Message}</Typography>\r\n<FormControl sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel >New Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"New Password\"\r\n            onChange={(e) => {setPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    onClick={handleClickShowPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n             \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"80%\" , md : \"75%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel>Confirm New Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Confirm New Password\"\r\n            onChange={(e) => {setConfirmPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n\r\n<Button \r\n                      onClick={() => {\r\n\r\n                        if (Password !== \"\" && ConfirmPassword !==\"\" && Password === ConfirmPassword && Password.length >= 6 ) {\r\n                          handleUpdatepass()\r\n                          setOpen(false)\r\n                        } else {\r\n                          setMessage(\"Password must contains at least 6 characters\")\r\n                        }\r\n\r\n                      }}\r\n                           sx={{\r\n                            my : \"10px\" ,\r\n                            backgroundColor: \"#92764E\",\r\n                            cursor: \"pointer\",\r\n                            color: \"#FFF\",\r\n                            padding: \"5px 16px\",\r\n                            borderRadius: \"20px\",\r\n                            width : {xs : \"60%\" , md : \"fit-content\" },\r\n                            \":hover\": {\r\n                              color: \"#92764E\",\r\n                              outline: \"1px solid #92764E\",\r\n                            },\r\n                          }}\r\n                      >Confirm</Button>\r\n\r\n\r\n</Box>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n",{"ruleId":"294","severity":1,"message":"295","line":25,"column":35,"nodeType":"296","messageId":"297","endLine":25,"endColumn":48},{"ruleId":"294","severity":1,"message":"298","line":26,"column":36,"nodeType":"296","messageId":"297","endLine":26,"endColumn":47},{"ruleId":"294","severity":1,"message":"299","line":27,"column":34,"nodeType":"296","messageId":"297","endLine":27,"endColumn":46},{"ruleId":"294","severity":1,"message":"300","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"301","line":1,"column":28,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"302","line":1,"column":15,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"303","line":32,"column":9,"nodeType":"296","messageId":"297","endLine":32,"endColumn":22},{"ruleId":"304","severity":1,"message":"305","line":85,"column":5,"nodeType":"306","endLine":90,"endColumn":7},{"ruleId":"294","severity":1,"message":"307","line":56,"column":10,"nodeType":"296","messageId":"297","endLine":56,"endColumn":24},{"ruleId":"294","severity":1,"message":"308","line":56,"column":26,"nodeType":"296","messageId":"297","endLine":56,"endColumn":43},{"ruleId":"294","severity":1,"message":"309","line":57,"column":10,"nodeType":"296","messageId":"297","endLine":57,"endColumn":21},{"ruleId":"294","severity":1,"message":"310","line":57,"column":23,"nodeType":"296","messageId":"297","endLine":57,"endColumn":37},{"ruleId":"294","severity":1,"message":"311","line":26,"column":18,"nodeType":"296","messageId":"297","endLine":26,"endColumn":25},{"ruleId":"294","severity":1,"message":"312","line":13,"column":9,"nodeType":"296","messageId":"297","endLine":13,"endColumn":22},{"ruleId":"294","severity":1,"message":"313","line":19,"column":19,"nodeType":"296","messageId":"297","endLine":19,"endColumn":31},{"ruleId":"294","severity":1,"message":"314","line":15,"column":8,"nodeType":"296","messageId":"297","endLine":15,"endColumn":18},{"ruleId":"294","severity":1,"message":"315","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":21},{"ruleId":"294","severity":1,"message":"316","line":2,"column":5,"nodeType":"296","messageId":"297","endLine":2,"endColumn":11},{"ruleId":"294","severity":1,"message":"317","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":21},{"ruleId":"294","severity":1,"message":"318","line":15,"column":10,"nodeType":"296","messageId":"297","endLine":15,"endColumn":31},{"ruleId":"294","severity":1,"message":"319","line":5,"column":14,"nodeType":"296","messageId":"297","endLine":5,"endColumn":25},{"ruleId":"294","severity":1,"message":"302","line":5,"column":27,"nodeType":"296","messageId":"297","endLine":5,"endColumn":37},{"ruleId":"294","severity":1,"message":"320","line":5,"column":39,"nodeType":"296","messageId":"297","endLine":5,"endColumn":53},{"ruleId":"294","severity":1,"message":"321","line":5,"column":55,"nodeType":"296","messageId":"297","endLine":5,"endColumn":65},{"ruleId":"294","severity":1,"message":"322","line":5,"column":67,"nodeType":"296","messageId":"297","endLine":5,"endColumn":75},{"ruleId":"294","severity":1,"message":"323","line":5,"column":77,"nodeType":"296","messageId":"297","endLine":5,"endColumn":90},{"ruleId":"294","severity":1,"message":"324","line":5,"column":92,"nodeType":"296","messageId":"297","endLine":5,"endColumn":98},{"ruleId":"294","severity":1,"message":"325","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":24},{"ruleId":"294","severity":1,"message":"301","line":7,"column":10,"nodeType":"296","messageId":"297","endLine":7,"endColumn":18},{"ruleId":"294","severity":1,"message":"326","line":8,"column":10,"nodeType":"296","messageId":"297","endLine":8,"endColumn":20},{"ruleId":"294","severity":1,"message":"327","line":8,"column":22,"nodeType":"296","messageId":"297","endLine":8,"endColumn":35},{"ruleId":"294","severity":1,"message":"328","line":9,"column":8,"nodeType":"296","messageId":"297","endLine":9,"endColumn":17},{"ruleId":"294","severity":1,"message":"329","line":10,"column":8,"nodeType":"296","messageId":"297","endLine":10,"endColumn":24},{"ruleId":"294","severity":1,"message":"330","line":11,"column":8,"nodeType":"296","messageId":"297","endLine":11,"endColumn":21},{"ruleId":"294","severity":1,"message":"331","line":12,"column":10,"nodeType":"296","messageId":"297","endLine":12,"endColumn":32},{"ruleId":"294","severity":1,"message":"332","line":12,"column":34,"nodeType":"296","messageId":"297","endLine":12,"endColumn":55},{"ruleId":"294","severity":1,"message":"333","line":12,"column":57,"nodeType":"296","messageId":"297","endLine":12,"endColumn":77},{"ruleId":"294","severity":1,"message":"334","line":12,"column":79,"nodeType":"296","messageId":"297","endLine":12,"endColumn":96},{"ruleId":"294","severity":1,"message":"335","line":12,"column":98,"nodeType":"296","messageId":"297","endLine":12,"endColumn":115},{"ruleId":"294","severity":1,"message":"336","line":13,"column":8,"nodeType":"296","messageId":"297","endLine":13,"endColumn":24},{"ruleId":"294","severity":1,"message":"337","line":14,"column":10,"nodeType":"296","messageId":"297","endLine":14,"endColumn":21},{"ruleId":"294","severity":1,"message":"338","line":28,"column":7,"nodeType":"296","messageId":"297","endLine":28,"endColumn":11},{"ruleId":"294","severity":1,"message":"339","line":33,"column":39,"nodeType":"296","messageId":"297","endLine":33,"endColumn":52},{"ruleId":"294","severity":1,"message":"322","line":5,"column":67,"nodeType":"296","messageId":"297","endLine":5,"endColumn":75},{"ruleId":"294","severity":1,"message":"324","line":5,"column":92,"nodeType":"296","messageId":"297","endLine":5,"endColumn":98},{"ruleId":"294","severity":1,"message":"340","line":9,"column":8,"nodeType":"296","messageId":"297","endLine":9,"endColumn":17},{"ruleId":"294","severity":1,"message":"339","line":26,"column":39,"nodeType":"296","messageId":"297","endLine":26,"endColumn":52},"no-unused-vars","'ForgotLoading' is assigned a value but never used.","Identifier","unusedVar","'codeLoading' is assigned a value but never used.","'resetLoading' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'IconButton' is defined but never used.","'handleSignout' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'categoryHeight' is assigned a value but never used.","'setcategoryHeight' is assigned a value but never used.","'PriceHeight' is assigned a value but never used.","'setPriceHeight' is assigned a value but never used.","'setTown' is assigned a value but never used.","'isSmallScreen' is assigned a value but never used.","'setmaxLength' is assigned a value but never used.","'removeIcon' is assigned a value but never used.","'useLocation' is defined but never used.","'Avatar' is defined but never used.","'BannerSection' is defined but never used.","'useUpdateInfoMutation' is defined but never used.","'FormControl' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'OutlinedInput' is defined but never used.","'Select' is defined but never used.","'PersonAddAltIcon' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'LoginIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'useConfirmCodeMutation' is defined but never used.","'useForgotpassMutation' is defined but never used.","'useResetPassMutation' is defined but never used.","'useSignInMutation' is defined but never used.","'useSignupMutation' is defined but never used.","'CircularProgress' is defined but never used.","'useNavigate' is defined but never used.","'User' is assigned a value but never used.","'updateLoading' is assigned a value but never used.","'jwtDecode' is defined but never used."]