[{"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\BlogDetails\\Blogcommentsec.jsx":"1","E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Sign\\Sign.jsx":"2"},{"size":4089,"mtime":1689286350707,"results":"3","hashOfConfig":"4"},{"size":18901,"mtime":1689291196852,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kt8rky",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\BlogDetails\\Blogcommentsec.jsx",[],[],"E:\\Group Project\\furnipro\\furniture-Website-using-React-js-1\\src\\componants\\Sign\\Sign.jsx",["13","14","15","16","17","18"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Box, FilledInput, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, Typography } from '@mui/material';\r\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport { useState } from 'react';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { useSignInMutation, useSignupMutation } from '../../services/SignApi';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function FormDialog() {\r\n\r\n\r\n\r\nconst [Signup , { isLoading : signupLoading }] = useSignupMutation();\r\nconst [SignIn , { isLoading : signinLoading} ] = useSignInMutation();\r\n\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n    const [RouteSign , setRouteSign ] = useState(true);\r\n    const [stepnum, setstepnum] = useState(1);\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [Country, setCountry] = React.useState('');\r\n    const [Town, setTown] = React.useState('');\r\n     const [firstName, setfirstName] = useState(\"\");\r\n    const [LastName, setLastName] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [address, setaddress] = useState(\"\");\r\n    const [UserName, setUserName] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\nconst [Message, setMessage] = useState(\"\");\r\n\r\n\r\nconst Navigate = useNavigate()\r\n\r\n\r\n    \r\n    const handleSignUp = async () => {\r\n        const result = await Signup({UserName , Password , firstName , LastName , Email , Phone , Country , Town , address });\r\n        if (result.error) {\r\n          console.log('Sign up failed:', result.error);\r\n          setRouteSign(true)\r\n          setstepnum(1)\r\n        } else {\r\n          console.log('Sign up successful:', result.data);\r\n          setRouteSign(true)\r\n        setstepnum(1)\r\n        }};\r\n\r\n\r\n      const handleSignin = async () => {\r\n        try {\r\n            const { data } = await SignIn({ UserName, Password });\r\n            const token = data.token;\r\n        \r\n            if (token) {\r\n              console.log('Signin successful!');\r\n              localStorage.setItem('token', token); // Save the token in session storage\r\n            } else {\r\n              console.error('Signin failed: Token not received');\r\n            }\r\n\r\n           if (localStorage.getItem(\"token\")) {\r\n            setOpen(false)\r\n            Navigate(\"/\") }\r\n\r\n          } catch (error) {\r\n            console.error('Signin failed:', error);\r\n          }        \r\n       \r\n      };\r\n\r\n\r\n\r\n\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  \r\n    const handleMouseDownPassword = (event) => {\r\n      event.preventDefault();\r\n    };\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n             <Box sx={{display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\"}}  onClick={handleClickOpen}>\r\n                 <LoginIcon\r\n                   sx={{ fontSize: \"30px\", color: \"black\" ,}}\r\n                 />\r\n               <Typography color=\"black\" sx={{ ml : \"5px\" ,fontSize : {xs : \"10px\" , md : \"12px\"}}}>Login</Typography>\r\n             </Box>\r\n\r\n                \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n\r\n            {/* <Button variant=\"outlined\" startIcon={<PersonAddAltIcon sx={{fontSize : \"30px\"}}/>}>Sign Up</Button> */}\r\n\r\n\r\n{RouteSign ? (\r\n    <Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n   \r\n   \r\n\r\n    <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n    <Typography sx={{mr:\"10px\" , fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"#92764E\"}} variant='h6'>You don't have account ?</Typography>\r\n    <Typography\r\n       onClick={() => {setRouteSign(false)}}\r\n    sx={{fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n    cursor : \"pointer\" , \r\n    \":hover\" : {\r\n        color : \"gray\"\r\n    }\r\n    }} variant='h6'>Sign Up</Typography>\r\n    \r\n    \r\n    </Box>\r\n    \r\n    <Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Sign In</Typography>\r\n    \r\n    \r\n    <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n     ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n            \r\n            \r\n            <TextField\r\n            onChange={(e) => {setUserName(e.target.value)}}\r\n            sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n            id=\"username\" label=\"UserName\" type=\"text\" />\r\n    \r\n    \r\n    \r\n    <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n    variant=\"outlined\">\r\n              <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\r\n              <OutlinedInput\r\n              label=\"Password\"\r\n                id=\"filled-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      onChange={(e) => {setPassword(e.target.value)}}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n    \r\n                <Button \r\n                onClick={() => {handleSignin()}}\r\n                    sx={{\r\n                        my : \"10px\" ,\r\n                        backgroundColor: \"#92764E\",\r\n                        cursor: \"pointer\",\r\n                        color: \"#FFF\",\r\n                        padding: \"5px 16px\",\r\n                        borderRadius: \"20px\",\r\n                        width : {xs : \"60%\" , md : \"fit-content\" },\r\n                        \":hover\": {\r\n                          color: \"#92764E\",\r\n                          outline: \"1px solid #92764E\",\r\n                        },\r\n                      }}\r\n                \r\n                startIcon={ signinLoading ? <CircularProgress/> :<LoginIcon sx={{fontSize : \"30px\"}}/>}>Sign In</Button>\r\n    \r\n    \r\n            </Box>\r\n    \r\n    \r\n     <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n    <Typography sx={{fontSize:{xs : \"12px\" , md : \"18px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n    cursor : \"pointer\" , \r\n    \":hover\" : {\r\n        color : \"gray\"\r\n    }\r\n    }} variant='h6'>Forgot Password ?</Typography>\r\n    \r\n    </Box>\r\n    \r\n    </Box>\r\n) : \r\n\r\n// _____________________________________________________________________________________\r\n\r\n(\r\n\r\n<Box sx={{width : {xs : \"290px\" , sm : \"500px\" , md : \"600px\"}, py : \"20px\"  ,display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\" }}>\r\n\r\n   <Box sx={{width : \"calc(100% - 20px)\"  ,display : \"flex\" , justifyContent : \"center\" , alignItems : \"center\" }}  >\r\n   <Typography sx={{mr:\"10px\" , fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"#92764E\"}} variant='h6'>You have an account ?</Typography>\r\n   <Typography \r\n   onClick={() => {setRouteSign(true)}}\r\n   sx={{fontSize:{xs : \"16px\" , md : \"20px\"} ,color : \"blue\" , textDecoration : \"underline\" ,\r\n   cursor : \"pointer\" , \r\n   \":hover\" : {\r\n       color : \"gray\"\r\n   }\r\n   }} variant='h6'>Sign In</Typography>\r\n   </Box>\r\n   \r\n   <Typography sx={{width : \"calc(100% - 20px)\" , fontWeight : \"700\" , mt : \"15px\" ,color : \"#92764E\" ,textAlign : \"center\"}} variant='h4'>Sign Up</Typography>\r\n   \r\n    <Typography color=\"red\" >{Message}</Typography>\r\n     {/* _____________________________________________________________________________ */}\r\n   {stepnum === 1 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <TextField\r\n          onChange={(e) => {setUserName(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"username\" label=\"User name\" type=\"text\" />\r\n  \r\n  \r\n  \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel >Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Password\"\r\n            onChange={(e) => {setPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n             \r\n  <FormControl sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n  variant=\"outlined\">\r\n            <InputLabel>Confirm Password</InputLabel>\r\n            <OutlinedInput\r\n            label=\"Confirm Password\"\r\n            onChange={(e) => {setConfirmPassword(e.target.value)}}\r\n              type={showPassword ? 'text' : 'password'}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n  \r\n\r\n<Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n<Box sx={{flexGrow : 1}} />\r\n\r\n<IconButton \r\n\r\nonClick={() => {\r\n    console.log(UserName , Password , ConfirmPassword);\r\n    if (UserName !== \"\" && Password !== \"\" && Password === ConfirmPassword ) {\r\n        setstepnum(2)\r\n        setMessage(\"\")\r\n    } else {\r\n        setMessage(\"Invalid Error\")\r\n    }\r\n    \r\n\r\n\r\n\r\n}}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      backgroundColor: \"#92764E\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#FFF\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                        color: \"#92764E\",\r\n                        outline: \"1px solid #92764E\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowForwardIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n\r\n   {/* _____________________________________________________________________________ */}\r\n   \r\n   {stepnum === 2 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <Box sx={{width: {xs : \"95%\" , md : \"80%\" },display: \"flex\",justifyContent: \"space-between\"}}>\r\n                        <TextField required\r\n                        onChange={(e) => {setfirstName(e.target.value)}}\r\n                sx={{width :\"49%\",fontSize:\"10px\", borderRadius : \"30px\" , backgroundColor:\"#E9E7DB\",border: \"none\" , my : \"10px\"}}\r\n                id=\"first\" label=\"First Name\" type=\"text\" />\r\n\r\n\r\n\r\n                <TextField onChange={(e) => {setLastName(e.target.value)}} required\r\n                sx={{width :\"49%\",fontSize:\"10px\", borderRadius : \"30px\" ,backgroundColor:\"#E9E7DB\",border: \"none\" , my : \"10px\"}}\r\n                id=\"last\" label=\"Last Name\" type=\"text\" />\r\n                </Box>\r\n    \r\n          <TextField\r\n          required\r\n          onChange={(e) => {setEmail(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Email\" label=\"Email\" type=\"email\" />\r\n\r\n<TextField\r\n          onChange={(e) => {setPhone(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"phone\" label=\"Phone\" type=\"number\" />\r\n  \r\n  \r\n\r\n\r\n<Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n<IconButton \r\nonClick={() => {setstepnum(1)}}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      color: \"#92764E\",\r\n                      outline: \"1px solid #92764E\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                       backgroundColor: \"#92764E\",\r\n                       cursor: \"pointer\",\r\n                       color: \"#FFF\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowBackIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n\r\n<IconButton \r\nonClick={() => {\r\n\r\nif (firstName !== \"\" && LastName !== \"\" && Email !== \"\" && Email.includes(\"@\")) {\r\n    setstepnum(3)\r\n    setMessage(\"\")\r\n} else {\r\n    setMessage(\"invalid Error\")\r\n}\r\n\r\n\r\n}}\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      backgroundColor: \"#92764E\",\r\n                      cursor: \"pointer\",\r\n                      color: \"#FFF\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                        color: \"#92764E\",\r\n                        outline: \"1px solid #92764E\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowForwardIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n     {/* _____________________________________________________________________________ */}\r\n   {stepnum === 3 &&\r\n   <Box sx={{width :{xs : \"calc(100% - 20px)\"\r\n   ,md : \"calc(100% - 20px)\" } , display : \"flex\" , flexDirection : \"column\" , alignItems : \"center\"}}>\r\n          \r\n          \r\n          <FormControl required sx={{width : {xs : \"95%\" , md : \"80%\"}, my : \"10px\" ,borderRadius : \"30px\", backgroundColor:\"#E9E7DB\"}}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={Country}\r\n          label=\"Country\"\r\n          onChange={(eo) => { setCountry(eo.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"Egypt\">Egypt</MenuItem>\r\n          <MenuItem value=\"Canada\">Canada</MenuItem>\r\n          <MenuItem value=\"Brazil\">Brazil</MenuItem>\r\n          <MenuItem value=\"United State\">United State</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n  \r\n\r\n  <TextField\r\n          onChange={(e) => {setTown(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Town\" label=\"Town\" type=\"text\" />\r\n\r\n\r\n<TextField\r\n          onChange={(e) => {setaddress(e.target.value)}}\r\n          sx={{outline : \"none\"  ,width : { xs : \"95%\" , md : \"80%\"},fontSize:\"10px\", borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n          id=\"Adderss\" label=\"Address\" type=\"text\" />\r\n  \r\n\r\n\r\n<Box sx={{width : {xs :\"95%\" , md : \"80%\"} , display : \"flex\" , justifyContent : \"space-between\"}}>\r\n\r\n<IconButton \r\nonClick={() => {setstepnum(2)}}\r\n\r\n                  sx={{\r\n                      my : \"10px\" ,\r\n                      color: \"#92764E\",\r\n                      outline: \"1px solid #92764E\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"20px\",\r\n                      \":hover\": {\r\n                       backgroundColor: \"#92764E\",\r\n                       cursor: \"pointer\",\r\n                       color: \"#FFF\",\r\n                      },\r\n                    }} >\r\n              \r\n              <ArrowBackIcon sx={{fontSize : \"25px\"}}/>\r\n              </IconButton>\r\n\r\n\r\n              <Button \r\n\r\n\r\n              onClick={() => {\r\n\r\n                if (Country !== \"\") {\r\n                    handleSignUp()\r\n                } else {\r\n                    setMessage(\"Please Choose Your Country\")\r\n                }     \r\n\r\n              }}\r\nsx={{\r\n    my : \"10px\" ,\r\n    backgroundColor: \"#92764E\",\r\n    cursor: \"pointer\",\r\n    color: \"#FFF\",\r\n    padding: \"5px 16px\",\r\n    borderRadius: \"20px\",\r\n    width : {xs : \"60%\" , md : \"fit-content\" },\r\n    \":hover\": {\r\n      color: \"#92764E\",\r\n      outline: \"1px solid #92764E\",\r\n    },\r\n  }}\r\n\r\nstartIcon={signupLoading ?     <CircularProgress />\r\n: <PersonAddAltIcon sx={{fontSize : \"30px\"}}/>}>Sign Up</Button>\r\n\r\n             \r\n</Box>\r\n  \r\n  \r\n          </Box>\r\n   }\r\n   \r\n   \r\n   </Box>\r\n\r\n)\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"19","severity":1,"message":"20","line":5,"column":8,"nodeType":"21","messageId":"22","endLine":5,"endColumn":21},{"ruleId":"19","severity":1,"message":"23","line":6,"column":8,"nodeType":"21","messageId":"22","endLine":6,"endColumn":21},{"ruleId":"19","severity":1,"message":"24","line":7,"column":8,"nodeType":"21","messageId":"22","endLine":7,"endColumn":25},{"ruleId":"19","severity":1,"message":"25","line":8,"column":8,"nodeType":"21","messageId":"22","endLine":8,"endColumn":19},{"ruleId":"19","severity":1,"message":"26","line":9,"column":15,"nodeType":"21","messageId":"22","endLine":9,"endColumn":26},{"ruleId":"19","severity":1,"message":"27","line":10,"column":8,"nodeType":"21","messageId":"22","endLine":10,"endColumn":33},"no-unused-vars","'DialogActions' is defined but never used.","Identifier","unusedVar","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'FilledInput' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used."]