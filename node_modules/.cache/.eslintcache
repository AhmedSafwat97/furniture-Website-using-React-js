[{"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Shop Details\\Shopdetails.jsx":"1","G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\BlogDetails\\BlogDetails.jsx":"2","G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Sign\\Sign.jsx":"3","G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Global Section\\CommentSec.jsx":"4","G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\About\\AboutSections\\Section1.jsx":"5"},{"size":8772,"mtime":1689395197250,"results":"6","hashOfConfig":"7"},{"size":7037,"mtime":1689395197247,"results":"8","hashOfConfig":"7"},{"size":19233,"mtime":1689398248355,"results":"9","hashOfConfig":"7"},{"size":6815,"mtime":1689396302530,"results":"10","hashOfConfig":"7"},{"size":7518,"mtime":1689399580171,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"eq4i9j",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Shop Details\\Shopdetails.jsx",["29","30"],[],"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\BlogDetails\\BlogDetails.jsx",["31","32","33","34","35","36"],[],"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Sign\\Sign.jsx",["37","38","39","40","41","42"],[],"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\Global Section\\CommentSec.jsx",["43","44","45","46","47","48","49","50","51"],[],"import { Avatar, Box, Button, CircularProgress, IconButton, TextField, Typography } from '@mui/material';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useCommentMutation, useGetOneblogQuery } from '../../services/productApi';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\n\r\nconst Commentsec = ({data , CommentSecWidth , CommentSecName}) => {\r\n    const [comment, setcomment] = React.useState(\"\");\r\n    const [Name, setName] = React.useState(\"\");\r\n    const [Email, setEmail] = React.useState(\"\");\r\n    const [itemId, setitemId] = useState([]);\r\n    const [TheComment, setTheComment] = useState(sessionStorage.getItem(CommentSecName) ? JSON.parse(sessionStorage.getItem(CommentSecName)) : [] );\r\nconst [removeIcon, setremoveIcon] = useState(false);\r\nconst [error, setError] = useState(false)\r\n  \r\n\r\n    const commentDetails  = {\r\n      UniqeId : Math.floor(Math.random() * 1000) , \r\n        Id : data.id ,\r\n        Name : Name ,\r\n        Email : Email , \r\n        date : new Date().toLocaleDateString(),\r\n        Comment : comment , \r\n    }\r\n\r\n\r\n    return (\r\n        <Box sx={{m : \"20px 0\"}}>\r\n    <Box sx={{ border : \"1px solid black\", mx: \"auto\" ,p : \"15px\" ,borderRadius : \"15px\"  , width : {xs : \"90%\" , md : `${CommentSecWidth}%`} , mb:\"20px\" }}>\r\n    \r\n        <Typography variant='h6' sx={{mx : \"auto\" , width : \"95%\" , fontSize: \"18px\" ,fontWeight : \"700\"}}>Comments</Typography>\r\n        {/* {map} */}\r\n        {data.comments.map((comment , index) => (\r\n            <Box key={index} sx={{ width:\"95%\", my : \"10px\",mx:\"auto\",bgcolor:\"#F3F2EE\",borderRadius : \"15px\",display:\"flex\" }}>\r\n            <Avatar sx={{m: \"20px\",  width: 56, height: 56 }} alt={comment.Name} src=\"/broken-image.jpg\" />\r\n            <Box  sx={{flexGrow : 1}}>\r\n                <Typography sx={{mt: \"20px\",fontWeight:\"800\"}}>{comment.Name}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"10px\"}}>{comment.date}</Typography>\r\n                <Typography  sx={{color: \"gray\", fontSize:\"14px\"  , mb : \"20px\", width : \"100%\"}}>{comment.Comment}</Typography>\r\n            </Box>\r\n        </Box>\r\n        ))}\r\n\r\n          {TheComment.filter((comment) => comment.Id === data.id ).map((comment , index) => (\r\n            <Box key={comment.UniqeId} sx={{ width:\"95%\", my : \"10px\",mx:\"auto\",bgcolor:\"#F3F2EE\", minheight : \"300px\",borderRadius : \"15px\",display:\"flex\" }}>\r\n            <Avatar sx={{m: \"20px\",  width: 56, height: 56 }} alt={comment.Name} src=\"/broken-image.jpg\" />\r\n            <Box\r\n            sx={{flexGrow : 1 }} >\r\n                <Typography sx={{mt: \"20px\", fontWeight:\"800\"}}>{comment.Name}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"10px\"}}>{comment.date}</Typography>\r\n                <Typography sx={{color: \"gray\", fontSize:\"14px\"  , mb : \"20px\", width : \"100%\"}}>{comment.Comment}</Typography>\r\n            </Box>\r\n\r\n            \r\n\r\n        <IconButton  \r\n    onMouseEnter={() => {\r\n      if (!itemId.includes(comment.UniqeId)) {\r\n        setitemId([...itemId , comment.UniqeId ])\r\n      }\r\n     setremoveIcon(true)\r\n   }}\r\n   onMouseLeave={() => {\r\n    setitemId([])\r\n     setremoveIcon(false)\r\n   }}\r\n   onClick={()=> {\r\n    const NewTheComment = TheComment.filter((item) => {\r\n      return item.UniqeId !== comment.UniqeId;\r\n    });\r\n    const NewItemid = itemId.filter((item) => {\r\n        return item.UniqeId !== comment.UniqeId ;})\r\n\r\n      setitemId(NewItemid)\r\n      setTheComment(NewTheComment)\r\n\r\n      sessionStorage.setItem(CommentSecName , JSON.stringify(NewTheComment) )\r\n\r\n\r\n   }}\r\n\r\n       sx={{mr : \"20px\"}}>\r\n    {itemId.includes(comment.UniqeId) ?   < DeleteIcon sx={{color : \"red\"}}/> : < DeleteOutlineIcon sx={{color : \"gray\"}}/> }\r\n       </IconButton>\r\n        </Box>\r\n         ))}\r\n\r\n    </Box>\r\n\r\n\r\n\r\n\r\n    <Box sx={{ border : \"1px solid black\", mx: \"auto\" ,p : \"15px\" ,borderRadius : \"15px\"  , width : {xs : \"90%\" , md : `${CommentSecWidth}%`} }}>\r\n    \r\n    <Typography variant='h5' sx={{mx : \"auto\" , width : \"95%\" , fontSize: \"18px\" ,fontWeight : \"700\"}}>Write your Comment</Typography>\r\n          {error && <Typography sx={{color:\"red\",fontSize:\"12px\",textAlign:\"center\"}}>Please ,Fill all the Form inputs</Typography>}\r\n    <Box sx={{width:\"95%\",mx:\"auto\",borderRadius : \"15px\",display:\"flex\" }}>\r\n       <form style={{width:\"100%\"}}>\r\n        <Box sx={{width:\"100%\",display:\"flex\", justifyContent:\"space-between\"}}>\r\n            <TextField required\r\n                    value={Name}\r\n                    onChange={(e) => {setName(e.target.value)}}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Name\" />\r\n            <TextField required\r\n                    value={Email}\r\n                    onChange={(e) => {setEmail(e.target.value)}}\r\n                    sx={{width :\"49%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                    size=\"small\"\r\n                    label=\"Email\" />\r\n        </Box>\r\n        <TextField required\r\n        value={comment}\r\n        onChange={(e) => {setcomment(e.target.value)}}\r\n               sx={{width :\"97%\",fontSize:\"10px\" , borderRadius : \"30px\",backgroundColor:\"#E9E7DB\",border: \"none\" , m : \"10px\"}}\r\n                size=\"small\"\r\n                multiline\r\n                rows={4}\r\n                label=\"your comment\" />\r\n\r\n\r\n        <Button       \r\n\r\n        onClick={() => {\r\n           if (Name !== \"\" && Email !== \"\" && Email.includes(\"@\") && comment !== \"\") {\r\n            setTheComment([...TheComment , commentDetails])\r\n            if (TheComment !== []) {\r\n            sessionStorage.setItem(CommentSecName , JSON.stringify([...TheComment , commentDetails]) )}\r\n            console.log(commentDetails);\r\n            setEmail(\"\")\r\n            setName(\"\")\r\n            setcomment(\"\")\r\n           }\r\n           setError(true);\r\n          }}\r\n            sx={{\r\n              my : \"10px\" ,\r\n              backgroundColor: \"#92764E\",\r\n              cursor: \"pointer\",\r\n              color: \"#FFF\",\r\n              padding: \"5px 16px\",\r\n              borderRadius: \"20px\",\r\n              width : \"fit-content\",\r\n              \":hover\": {\r\n                color: \"#92764E\",\r\n                outline: \"1px solid #92764E\",\r\n              },\r\n            }}\r\n           \r\n              >\r\n               Submit Comment\r\n              </Button>\r\n\r\n\r\n       </form>\r\n    </Box>\r\n\r\n</Box>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default Commentsec;\r\n",[],"G:\\NewProject\\furniture-Website-using-React-js\\src\\componants\\About\\AboutSections\\Section1.jsx",["52"],[],{"ruleId":"53","severity":1,"message":"54","line":26,"column":27,"nodeType":"55","messageId":"56","endLine":26,"endColumn":45},{"ruleId":"53","severity":1,"message":"57","line":27,"column":26,"nodeType":"55","messageId":"56","endLine":27,"endColumn":43},{"ruleId":"53","severity":1,"message":"58","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"59","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":16},{"ruleId":"53","severity":1,"message":"60","line":4,"column":61,"nodeType":"55","messageId":"56","endLine":4,"endColumn":70},{"ruleId":"53","severity":1,"message":"61","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":40,"column":29,"nodeType":"55","messageId":"56","endLine":40,"endColumn":47},{"ruleId":"53","severity":1,"message":"57","line":41,"column":26,"nodeType":"55","messageId":"56","endLine":41,"endColumn":43},{"ruleId":"53","severity":1,"message":"62","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":21},{"ruleId":"53","severity":1,"message":"63","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":21},{"ruleId":"53","severity":1,"message":"64","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":25},{"ruleId":"53","severity":1,"message":"65","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":19},{"ruleId":"53","severity":1,"message":"66","line":9,"column":15,"nodeType":"55","messageId":"56","endLine":9,"endColumn":26},{"ruleId":"53","severity":1,"message":"67","line":10,"column":8,"nodeType":"55","messageId":"56","endLine":10,"endColumn":33},{"ruleId":"53","severity":1,"message":"68","line":1,"column":31,"nodeType":"55","messageId":"56","endLine":1,"endColumn":47},{"ruleId":"53","severity":1,"message":"58","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"69","line":2,"column":28,"nodeType":"55","messageId":"56","endLine":2,"endColumn":34},{"ruleId":"53","severity":1,"message":"61","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":28},{"ruleId":"53","severity":1,"message":"70","line":3,"column":30,"nodeType":"55","messageId":"56","endLine":3,"endColumn":48},{"ruleId":"53","severity":1,"message":"71","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":21},{"ruleId":"53","severity":1,"message":"72","line":4,"column":23,"nodeType":"55","messageId":"56","endLine":4,"endColumn":34},{"ruleId":"53","severity":1,"message":"73","line":4,"column":36,"nodeType":"55","messageId":"56","endLine":4,"endColumn":45},{"ruleId":"53","severity":1,"message":"74","line":16,"column":8,"nodeType":"55","messageId":"56","endLine":16,"endColumn":18},{"ruleId":"53","severity":1,"message":"75","line":47,"column":13,"nodeType":"55","messageId":"56","endLine":47,"endColumn":26},"no-unused-vars","'setCommentSecWidth' is assigned a value but never used.","Identifier","unusedVar","'setCommentSecName' is assigned a value but never used.","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'useCommentMutation' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'FilledInput' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'CircularProgress' is defined but never used.","'useRef' is defined but never used.","'useGetOneblogQuery' is defined but never used.","'useLocation' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.","'removeIcon' is assigned a value but never used.","'isSmallScreen' is assigned a value but never used."]